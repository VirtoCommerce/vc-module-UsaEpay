//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace UsaEpay.Client {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ueSoapServerBinding", Namespace="urn:usaepay")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SearchParam))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SyncLog))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(LineItem))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Bank))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(CurrencyObject))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(PriceTier))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ProductInventory))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(FieldValue))]
    public partial class usaepayService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback addCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback addCustomerPaymentMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback addProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback addProductCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback addProductInventoryLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback addReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback adjustInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback bulkCurrencyConversionOperationCompleted;
        
        private System.Threading.SendOrPostCallback captureTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback closeBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback convertTranToCustOperationCompleted;
        
        private System.Threading.SendOrPostCallback convertTranToPayMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback copyCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback createBatchUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback currencyConversionOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCustomerPaymentMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteProductCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback disableCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback emailTransactionReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback emailTransactionReceiptByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback enableCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBankListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBatchStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBatchTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBatchUploadStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCheckTraceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerPaymentMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerPaymentMethodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProductCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProductCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProductInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProductInventoryLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProductInventoryLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReceiptByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReceiptsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSupportedCurrenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSyncLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSyncLogCurrentPositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSystemInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionCustomOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback lookupCardTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback pauseBatchUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback postAuthOperationCompleted;
        
        private System.Threading.SendOrPostCallback quickUpdateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback quickUpdateProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback refundTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback renderReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback renderReceiptByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback runBatchUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback runCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback runCheckCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback runCustomerTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback runQuickSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback runQuickCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback runAuthOnlyOperationCompleted;
        
        private System.Threading.SendOrPostCallback runSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback runCheckSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback runTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback runTransactionAPIOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveCardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchBatchesOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchBatchesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchCustomerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchCustomersCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchProductsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchProductsCustomOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchTransactionsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchTransactionsCustomOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchCustomersCustomOperationCompleted;
        
        private System.Threading.SendOrPostCallback setDefaultPaymentMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCustomerPaymentMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateProductCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadProductFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback voidTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback overrideTransactionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public usaepayService(string url) {
            this.Url = url;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event addCustomerCompletedEventHandler addCustomerCompleted;
        
        /// <remarks/>
        public event addCustomerPaymentMethodCompletedEventHandler addCustomerPaymentMethodCompleted;
        
        /// <remarks/>
        public event addProductCompletedEventHandler addProductCompleted;
        
        /// <remarks/>
        public event addProductCategoryCompletedEventHandler addProductCategoryCompleted;
        
        /// <remarks/>
        public event addProductInventoryLocationCompletedEventHandler addProductInventoryLocationCompleted;
        
        /// <remarks/>
        public event addReceiptCompletedEventHandler addReceiptCompleted;
        
        /// <remarks/>
        public event adjustInventoryCompletedEventHandler adjustInventoryCompleted;
        
        /// <remarks/>
        public event bulkCurrencyConversionCompletedEventHandler bulkCurrencyConversionCompleted;
        
        /// <remarks/>
        public event captureTransactionCompletedEventHandler captureTransactionCompleted;
        
        /// <remarks/>
        public event closeBatchCompletedEventHandler closeBatchCompleted;
        
        /// <remarks/>
        public event convertTranToCustCompletedEventHandler convertTranToCustCompleted;
        
        /// <remarks/>
        public event convertTranToPayMethodCompletedEventHandler convertTranToPayMethodCompleted;
        
        /// <remarks/>
        public event copyCustomerCompletedEventHandler copyCustomerCompleted;
        
        /// <remarks/>
        public event createBatchUploadCompletedEventHandler createBatchUploadCompleted;
        
        /// <remarks/>
        public event currencyConversionCompletedEventHandler currencyConversionCompleted;
        
        /// <remarks/>
        public event deleteCustomerCompletedEventHandler deleteCustomerCompleted;
        
        /// <remarks/>
        public event deleteCustomerPaymentMethodCompletedEventHandler deleteCustomerPaymentMethodCompleted;
        
        /// <remarks/>
        public event deleteProductCompletedEventHandler deleteProductCompleted;
        
        /// <remarks/>
        public event deleteProductCategoryCompletedEventHandler deleteProductCategoryCompleted;
        
        /// <remarks/>
        public event deleteReceiptCompletedEventHandler deleteReceiptCompleted;
        
        /// <remarks/>
        public event disableCustomerCompletedEventHandler disableCustomerCompleted;
        
        /// <remarks/>
        public event emailTransactionReceiptCompletedEventHandler emailTransactionReceiptCompleted;
        
        /// <remarks/>
        public event emailTransactionReceiptByNameCompletedEventHandler emailTransactionReceiptByNameCompleted;
        
        /// <remarks/>
        public event enableCustomerCompletedEventHandler enableCustomerCompleted;
        
        /// <remarks/>
        public event getAccountDetailsCompletedEventHandler getAccountDetailsCompleted;
        
        /// <remarks/>
        public event getBankListCompletedEventHandler getBankListCompleted;
        
        /// <remarks/>
        public event getBatchStatusCompletedEventHandler getBatchStatusCompleted;
        
        /// <remarks/>
        public event getBatchTransactionsCompletedEventHandler getBatchTransactionsCompleted;
        
        /// <remarks/>
        public event getBatchUploadStatusCompletedEventHandler getBatchUploadStatusCompleted;
        
        /// <remarks/>
        public event getCheckTraceCompletedEventHandler getCheckTraceCompleted;
        
        /// <remarks/>
        public event getCustomerCompletedEventHandler getCustomerCompleted;
        
        /// <remarks/>
        public event getCustomerHistoryCompletedEventHandler getCustomerHistoryCompleted;
        
        /// <remarks/>
        public event getCustomerPaymentMethodCompletedEventHandler getCustomerPaymentMethodCompleted;
        
        /// <remarks/>
        public event getCustomerPaymentMethodsCompletedEventHandler getCustomerPaymentMethodsCompleted;
        
        /// <remarks/>
        public event getCustomerReportCompletedEventHandler getCustomerReportCompleted;
        
        /// <remarks/>
        public event getCustomFieldsCompletedEventHandler getCustomFieldsCompleted;
        
        /// <remarks/>
        public event getProductCompletedEventHandler getProductCompleted;
        
        /// <remarks/>
        public event getProductCategoryCompletedEventHandler getProductCategoryCompleted;
        
        /// <remarks/>
        public event getProductCategoriesCompletedEventHandler getProductCategoriesCompleted;
        
        /// <remarks/>
        public event getProductInventoryCompletedEventHandler getProductInventoryCompleted;
        
        /// <remarks/>
        public event getProductInventoryLocationCompletedEventHandler getProductInventoryLocationCompleted;
        
        /// <remarks/>
        public event getProductInventoryLocationsCompletedEventHandler getProductInventoryLocationsCompleted;
        
        /// <remarks/>
        public event getReceiptCompletedEventHandler getReceiptCompleted;
        
        /// <remarks/>
        public event getReceiptByNameCompletedEventHandler getReceiptByNameCompleted;
        
        /// <remarks/>
        public event getReceiptsCompletedEventHandler getReceiptsCompleted;
        
        /// <remarks/>
        public event getReportCompletedEventHandler getReportCompleted;
        
        /// <remarks/>
        public event getSessionCompletedEventHandler getSessionCompleted;
        
        /// <remarks/>
        public event getSupportedCurrenciesCompletedEventHandler getSupportedCurrenciesCompleted;
        
        /// <remarks/>
        public event getSyncLogCompletedEventHandler getSyncLogCompleted;
        
        /// <remarks/>
        public event getSyncLogCurrentPositionCompletedEventHandler getSyncLogCurrentPositionCompleted;
        
        /// <remarks/>
        public event getSystemInfoCompletedEventHandler getSystemInfoCompleted;
        
        /// <remarks/>
        public event getTransactionCompletedEventHandler getTransactionCompleted;
        
        /// <remarks/>
        public event getTransactionCustomCompletedEventHandler getTransactionCustomCompleted;
        
        /// <remarks/>
        public event getTransactionProfileCompletedEventHandler getTransactionProfileCompleted;
        
        /// <remarks/>
        public event getTransactionReportCompletedEventHandler getTransactionReportCompleted;
        
        /// <remarks/>
        public event getTransactionStatusCompletedEventHandler getTransactionStatusCompleted;
        
        /// <remarks/>
        public event moveCustomerCompletedEventHandler moveCustomerCompleted;
        
        /// <remarks/>
        public event lookupCardTokenCompletedEventHandler lookupCardTokenCompleted;
        
        /// <remarks/>
        public event pauseBatchUploadCompletedEventHandler pauseBatchUploadCompleted;
        
        /// <remarks/>
        public event postAuthCompletedEventHandler postAuthCompleted;
        
        /// <remarks/>
        public event quickUpdateCustomerCompletedEventHandler quickUpdateCustomerCompleted;
        
        /// <remarks/>
        public event quickUpdateProductCompletedEventHandler quickUpdateProductCompleted;
        
        /// <remarks/>
        public event refundTransactionCompletedEventHandler refundTransactionCompleted;
        
        /// <remarks/>
        public event renderReceiptCompletedEventHandler renderReceiptCompleted;
        
        /// <remarks/>
        public event renderReceiptByNameCompletedEventHandler renderReceiptByNameCompleted;
        
        /// <remarks/>
        public event runBatchUploadCompletedEventHandler runBatchUploadCompleted;
        
        /// <remarks/>
        public event runCreditCompletedEventHandler runCreditCompleted;
        
        /// <remarks/>
        public event runCheckCreditCompletedEventHandler runCheckCreditCompleted;
        
        /// <remarks/>
        public event runCustomerTransactionCompletedEventHandler runCustomerTransactionCompleted;
        
        /// <remarks/>
        public event runQuickSaleCompletedEventHandler runQuickSaleCompleted;
        
        /// <remarks/>
        public event runQuickCreditCompletedEventHandler runQuickCreditCompleted;
        
        /// <remarks/>
        public event runAuthOnlyCompletedEventHandler runAuthOnlyCompleted;
        
        /// <remarks/>
        public event runSaleCompletedEventHandler runSaleCompleted;
        
        /// <remarks/>
        public event runCheckSaleCompletedEventHandler runCheckSaleCompleted;
        
        /// <remarks/>
        public event runTransactionCompletedEventHandler runTransactionCompleted;
        
        /// <remarks/>
        public event runTransactionAPICompletedEventHandler runTransactionAPICompleted;
        
        /// <remarks/>
        public event saveCardCompletedEventHandler saveCardCompleted;
        
        /// <remarks/>
        public event saveCardsCompletedEventHandler saveCardsCompleted;
        
        /// <remarks/>
        public event searchBatchesCompletedEventHandler searchBatchesCompleted;
        
        /// <remarks/>
        public event searchBatchesCountCompletedEventHandler searchBatchesCountCompleted;
        
        /// <remarks/>
        public event searchCustomerIDCompletedEventHandler searchCustomerIDCompleted;
        
        /// <remarks/>
        public event searchCustomersCompletedEventHandler searchCustomersCompleted;
        
        /// <remarks/>
        public event searchCustomersCountCompletedEventHandler searchCustomersCountCompleted;
        
        /// <remarks/>
        public event searchProductsCompletedEventHandler searchProductsCompleted;
        
        /// <remarks/>
        public event searchProductsCountCompletedEventHandler searchProductsCountCompleted;
        
        /// <remarks/>
        public event searchProductsCustomCompletedEventHandler searchProductsCustomCompleted;
        
        /// <remarks/>
        public event searchTransactionsCompletedEventHandler searchTransactionsCompleted;
        
        /// <remarks/>
        public event searchTransactionsCountCompletedEventHandler searchTransactionsCountCompleted;
        
        /// <remarks/>
        public event searchTransactionsCustomCompletedEventHandler searchTransactionsCustomCompleted;
        
        /// <remarks/>
        public event searchCustomersCustomCompletedEventHandler searchCustomersCustomCompleted;
        
        /// <remarks/>
        public event setDefaultPaymentMethodCompletedEventHandler setDefaultPaymentMethodCompleted;
        
        /// <remarks/>
        public event updateCustomerCompletedEventHandler updateCustomerCompleted;
        
        /// <remarks/>
        public event updateCustomerPaymentMethodCompletedEventHandler updateCustomerPaymentMethodCompleted;
        
        /// <remarks/>
        public event updateProductCompletedEventHandler updateProductCompleted;
        
        /// <remarks/>
        public event updateProductCategoryCompletedEventHandler updateProductCategoryCompleted;
        
        /// <remarks/>
        public event updateReceiptCompletedEventHandler updateReceiptCompleted;
        
        /// <remarks/>
        public event uploadProductFileCompletedEventHandler uploadProductFileCompleted;
        
        /// <remarks/>
        public event voidTransactionCompletedEventHandler voidTransactionCompleted;
        
        /// <remarks/>
        public event overrideTransactionCompletedEventHandler overrideTransactionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("addCustomerReturn", DataType="integer")]
        public string addCustomer(ueSecurityToken Token, CustomerObject CustomerData) {
            object[] results = this.Invoke("addCustomer", new object[] {
                        Token,
                        CustomerData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addCustomerAsync(ueSecurityToken Token, CustomerObject CustomerData) {
            this.addCustomerAsync(Token, CustomerData, null);
        }
        
        /// <remarks/>
        public void addCustomerAsync(ueSecurityToken Token, CustomerObject CustomerData, object userState) {
            if ((this.addCustomerOperationCompleted == null)) {
                this.addCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCustomerOperationCompleted);
            }
            this.InvokeAsync("addCustomer", new object[] {
                        Token,
                        CustomerData}, this.addCustomerOperationCompleted, userState);
        }
        
        private void OnaddCustomerOperationCompleted(object arg) {
            if ((this.addCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCustomerCompleted(this, new addCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("addCustomerPaymentMethodReturn", DataType="integer")]
        public string addCustomerPaymentMethod(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, PaymentMethod PaymentMethod, bool MakeDefault, bool Verify) {
            object[] results = this.Invoke("addCustomerPaymentMethod", new object[] {
                        Token,
                        CustNum,
                        PaymentMethod,
                        MakeDefault,
                        Verify});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addCustomerPaymentMethodAsync(ueSecurityToken Token, string CustNum, PaymentMethod PaymentMethod, bool MakeDefault, bool Verify) {
            this.addCustomerPaymentMethodAsync(Token, CustNum, PaymentMethod, MakeDefault, Verify, null);
        }
        
        /// <remarks/>
        public void addCustomerPaymentMethodAsync(ueSecurityToken Token, string CustNum, PaymentMethod PaymentMethod, bool MakeDefault, bool Verify, object userState) {
            if ((this.addCustomerPaymentMethodOperationCompleted == null)) {
                this.addCustomerPaymentMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCustomerPaymentMethodOperationCompleted);
            }
            this.InvokeAsync("addCustomerPaymentMethod", new object[] {
                        Token,
                        CustNum,
                        PaymentMethod,
                        MakeDefault,
                        Verify}, this.addCustomerPaymentMethodOperationCompleted, userState);
        }
        
        private void OnaddCustomerPaymentMethodOperationCompleted(object arg) {
            if ((this.addCustomerPaymentMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCustomerPaymentMethodCompleted(this, new addCustomerPaymentMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("ProductRefNum")]
        public string addProduct(ueSecurityToken Token, Product Product) {
            object[] results = this.Invoke("addProduct", new object[] {
                        Token,
                        Product});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addProductAsync(ueSecurityToken Token, Product Product) {
            this.addProductAsync(Token, Product, null);
        }
        
        /// <remarks/>
        public void addProductAsync(ueSecurityToken Token, Product Product, object userState) {
            if ((this.addProductOperationCompleted == null)) {
                this.addProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddProductOperationCompleted);
            }
            this.InvokeAsync("addProduct", new object[] {
                        Token,
                        Product}, this.addProductOperationCompleted, userState);
        }
        
        private void OnaddProductOperationCompleted(object arg) {
            if ((this.addProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addProductCompleted(this, new addProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("ProductCategoryRefNum")]
        public string addProductCategory(ueSecurityToken Token, ProductCategory ProductCategory) {
            object[] results = this.Invoke("addProductCategory", new object[] {
                        Token,
                        ProductCategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addProductCategoryAsync(ueSecurityToken Token, ProductCategory ProductCategory) {
            this.addProductCategoryAsync(Token, ProductCategory, null);
        }
        
        /// <remarks/>
        public void addProductCategoryAsync(ueSecurityToken Token, ProductCategory ProductCategory, object userState) {
            if ((this.addProductCategoryOperationCompleted == null)) {
                this.addProductCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddProductCategoryOperationCompleted);
            }
            this.InvokeAsync("addProductCategory", new object[] {
                        Token,
                        ProductCategory}, this.addProductCategoryOperationCompleted, userState);
        }
        
        private void OnaddProductCategoryOperationCompleted(object arg) {
            if ((this.addProductCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addProductCategoryCompleted(this, new addProductCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("InventoryLocation")]
        public string addProductInventoryLocation(ueSecurityToken Token, ProductInventoryLocation ProductInventoryLocation) {
            object[] results = this.Invoke("addProductInventoryLocation", new object[] {
                        Token,
                        ProductInventoryLocation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addProductInventoryLocationAsync(ueSecurityToken Token, ProductInventoryLocation ProductInventoryLocation) {
            this.addProductInventoryLocationAsync(Token, ProductInventoryLocation, null);
        }
        
        /// <remarks/>
        public void addProductInventoryLocationAsync(ueSecurityToken Token, ProductInventoryLocation ProductInventoryLocation, object userState) {
            if ((this.addProductInventoryLocationOperationCompleted == null)) {
                this.addProductInventoryLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddProductInventoryLocationOperationCompleted);
            }
            this.InvokeAsync("addProductInventoryLocation", new object[] {
                        Token,
                        ProductInventoryLocation}, this.addProductInventoryLocationOperationCompleted, userState);
        }
        
        private void OnaddProductInventoryLocationOperationCompleted(object arg) {
            if ((this.addProductInventoryLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addProductInventoryLocationCompleted(this, new addProductInventoryLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("addReceiptResponseReturn", DataType="integer")]
        public string addReceipt(ueSecurityToken Token, Receipt Receipt) {
            object[] results = this.Invoke("addReceipt", new object[] {
                        Token,
                        Receipt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addReceiptAsync(ueSecurityToken Token, Receipt Receipt) {
            this.addReceiptAsync(Token, Receipt, null);
        }
        
        /// <remarks/>
        public void addReceiptAsync(ueSecurityToken Token, Receipt Receipt, object userState) {
            if ((this.addReceiptOperationCompleted == null)) {
                this.addReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddReceiptOperationCompleted);
            }
            this.InvokeAsync("addReceipt", new object[] {
                        Token,
                        Receipt}, this.addReceiptOperationCompleted, userState);
        }
        
        private void OnaddReceiptOperationCompleted(object arg) {
            if ((this.addReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addReceiptCompleted(this, new addReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("adjustInventoryReturn")]
        public ProductInventory[] adjustInventory(ueSecurityToken Token, string ProductRefNum, ProductInventory[] Inventory) {
            object[] results = this.Invoke("adjustInventory", new object[] {
                        Token,
                        ProductRefNum,
                        Inventory});
            return ((ProductInventory[])(results[0]));
        }
        
        /// <remarks/>
        public void adjustInventoryAsync(ueSecurityToken Token, string ProductRefNum, ProductInventory[] Inventory) {
            this.adjustInventoryAsync(Token, ProductRefNum, Inventory, null);
        }
        
        /// <remarks/>
        public void adjustInventoryAsync(ueSecurityToken Token, string ProductRefNum, ProductInventory[] Inventory, object userState) {
            if ((this.adjustInventoryOperationCompleted == null)) {
                this.adjustInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnadjustInventoryOperationCompleted);
            }
            this.InvokeAsync("adjustInventory", new object[] {
                        Token,
                        ProductRefNum,
                        Inventory}, this.adjustInventoryOperationCompleted, userState);
        }
        
        private void OnadjustInventoryOperationCompleted(object arg) {
            if ((this.adjustInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.adjustInventoryCompleted(this, new adjustInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("bulkCurrencyConversionReturn")]
        public CurrencyConversion[] bulkCurrencyConversion(ueSecurityToken Token, string FromCurrency, string ToCurrency, double[] Amounts) {
            object[] results = this.Invoke("bulkCurrencyConversion", new object[] {
                        Token,
                        FromCurrency,
                        ToCurrency,
                        Amounts});
            return ((CurrencyConversion[])(results[0]));
        }
        
        /// <remarks/>
        public void bulkCurrencyConversionAsync(ueSecurityToken Token, string FromCurrency, string ToCurrency, double[] Amounts) {
            this.bulkCurrencyConversionAsync(Token, FromCurrency, ToCurrency, Amounts, null);
        }
        
        /// <remarks/>
        public void bulkCurrencyConversionAsync(ueSecurityToken Token, string FromCurrency, string ToCurrency, double[] Amounts, object userState) {
            if ((this.bulkCurrencyConversionOperationCompleted == null)) {
                this.bulkCurrencyConversionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbulkCurrencyConversionOperationCompleted);
            }
            this.InvokeAsync("bulkCurrencyConversion", new object[] {
                        Token,
                        FromCurrency,
                        ToCurrency,
                        Amounts}, this.bulkCurrencyConversionOperationCompleted, userState);
        }
        
        private void OnbulkCurrencyConversionOperationCompleted(object arg) {
            if ((this.bulkCurrencyConversionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bulkCurrencyConversionCompleted(this, new bulkCurrencyConversionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("captureTransactionReturn")]
        public TransactionResponse captureTransaction(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, double Amount) {
            object[] results = this.Invoke("captureTransaction", new object[] {
                        Token,
                        RefNum,
                        Amount});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void captureTransactionAsync(ueSecurityToken Token, string RefNum, double Amount) {
            this.captureTransactionAsync(Token, RefNum, Amount, null);
        }
        
        /// <remarks/>
        public void captureTransactionAsync(ueSecurityToken Token, string RefNum, double Amount, object userState) {
            if ((this.captureTransactionOperationCompleted == null)) {
                this.captureTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncaptureTransactionOperationCompleted);
            }
            this.InvokeAsync("captureTransaction", new object[] {
                        Token,
                        RefNum,
                        Amount}, this.captureTransactionOperationCompleted, userState);
        }
        
        private void OncaptureTransactionOperationCompleted(object arg) {
            if ((this.captureTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.captureTransactionCompleted(this, new captureTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("closeBatchReturn")]
        public bool closeBatch(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string BatchRefNum) {
            object[] results = this.Invoke("closeBatch", new object[] {
                        Token,
                        BatchRefNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void closeBatchAsync(ueSecurityToken Token, string BatchRefNum) {
            this.closeBatchAsync(Token, BatchRefNum, null);
        }
        
        /// <remarks/>
        public void closeBatchAsync(ueSecurityToken Token, string BatchRefNum, object userState) {
            if ((this.closeBatchOperationCompleted == null)) {
                this.closeBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OncloseBatchOperationCompleted);
            }
            this.InvokeAsync("closeBatch", new object[] {
                        Token,
                        BatchRefNum}, this.closeBatchOperationCompleted, userState);
        }
        
        private void OncloseBatchOperationCompleted(object arg) {
            if ((this.closeBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.closeBatchCompleted(this, new closeBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("convertTranToCustReturn", DataType="integer")]
        public string convertTranToCust(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, FieldValue[] UpdateData) {
            object[] results = this.Invoke("convertTranToCust", new object[] {
                        Token,
                        RefNum,
                        UpdateData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void convertTranToCustAsync(ueSecurityToken Token, string RefNum, FieldValue[] UpdateData) {
            this.convertTranToCustAsync(Token, RefNum, UpdateData, null);
        }
        
        /// <remarks/>
        public void convertTranToCustAsync(ueSecurityToken Token, string RefNum, FieldValue[] UpdateData, object userState) {
            if ((this.convertTranToCustOperationCompleted == null)) {
                this.convertTranToCustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconvertTranToCustOperationCompleted);
            }
            this.InvokeAsync("convertTranToCust", new object[] {
                        Token,
                        RefNum,
                        UpdateData}, this.convertTranToCustOperationCompleted, userState);
        }
        
        private void OnconvertTranToCustOperationCompleted(object arg) {
            if ((this.convertTranToCustCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.convertTranToCustCompleted(this, new convertTranToCustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("convertTranToPayMethodReturn", DataType="integer")]
        public string convertTranToPayMethod(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, string MethodName, bool MakeDefault) {
            object[] results = this.Invoke("convertTranToPayMethod", new object[] {
                        Token,
                        RefNum,
                        CustNum,
                        MethodName,
                        MakeDefault});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void convertTranToPayMethodAsync(ueSecurityToken Token, string RefNum, string CustNum, string MethodName, bool MakeDefault) {
            this.convertTranToPayMethodAsync(Token, RefNum, CustNum, MethodName, MakeDefault, null);
        }
        
        /// <remarks/>
        public void convertTranToPayMethodAsync(ueSecurityToken Token, string RefNum, string CustNum, string MethodName, bool MakeDefault, object userState) {
            if ((this.convertTranToPayMethodOperationCompleted == null)) {
                this.convertTranToPayMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconvertTranToPayMethodOperationCompleted);
            }
            this.InvokeAsync("convertTranToPayMethod", new object[] {
                        Token,
                        RefNum,
                        CustNum,
                        MethodName,
                        MakeDefault}, this.convertTranToPayMethodOperationCompleted, userState);
        }
        
        private void OnconvertTranToPayMethodOperationCompleted(object arg) {
            if ((this.convertTranToPayMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.convertTranToPayMethodCompleted(this, new convertTranToPayMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("copyCustomerReturn", DataType="integer")]
        public string copyCustomer(ueSecurityToken CopyFromToken, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, ueSecurityToken CopyToToken) {
            object[] results = this.Invoke("copyCustomer", new object[] {
                        CopyFromToken,
                        CustNum,
                        CopyToToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void copyCustomerAsync(ueSecurityToken CopyFromToken, string CustNum, ueSecurityToken CopyToToken) {
            this.copyCustomerAsync(CopyFromToken, CustNum, CopyToToken, null);
        }
        
        /// <remarks/>
        public void copyCustomerAsync(ueSecurityToken CopyFromToken, string CustNum, ueSecurityToken CopyToToken, object userState) {
            if ((this.copyCustomerOperationCompleted == null)) {
                this.copyCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyCustomerOperationCompleted);
            }
            this.InvokeAsync("copyCustomer", new object[] {
                        CopyFromToken,
                        CustNum,
                        CopyToToken}, this.copyCustomerOperationCompleted, userState);
        }
        
        private void OncopyCustomerOperationCompleted(object arg) {
            if ((this.copyCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.copyCustomerCompleted(this, new copyCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("createBatchUploadReturn")]
        public BatchUploadStatus createBatchUpload(ueSecurityToken Token, string FileName, bool AutoStart, string Format, string Encoding, string[] Fields, string Data, bool OverrideDuplicates) {
            object[] results = this.Invoke("createBatchUpload", new object[] {
                        Token,
                        FileName,
                        AutoStart,
                        Format,
                        Encoding,
                        Fields,
                        Data,
                        OverrideDuplicates});
            return ((BatchUploadStatus)(results[0]));
        }
        
        /// <remarks/>
        public void createBatchUploadAsync(ueSecurityToken Token, string FileName, bool AutoStart, string Format, string Encoding, string[] Fields, string Data, bool OverrideDuplicates) {
            this.createBatchUploadAsync(Token, FileName, AutoStart, Format, Encoding, Fields, Data, OverrideDuplicates, null);
        }
        
        /// <remarks/>
        public void createBatchUploadAsync(ueSecurityToken Token, string FileName, bool AutoStart, string Format, string Encoding, string[] Fields, string Data, bool OverrideDuplicates, object userState) {
            if ((this.createBatchUploadOperationCompleted == null)) {
                this.createBatchUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateBatchUploadOperationCompleted);
            }
            this.InvokeAsync("createBatchUpload", new object[] {
                        Token,
                        FileName,
                        AutoStart,
                        Format,
                        Encoding,
                        Fields,
                        Data,
                        OverrideDuplicates}, this.createBatchUploadOperationCompleted, userState);
        }
        
        private void OncreateBatchUploadOperationCompleted(object arg) {
            if ((this.createBatchUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createBatchUploadCompleted(this, new createBatchUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("currencyConversionReturn")]
        public CurrencyConversion currencyConversion(ueSecurityToken Token, string FromCurrency, string ToCurrency, double Amount) {
            object[] results = this.Invoke("currencyConversion", new object[] {
                        Token,
                        FromCurrency,
                        ToCurrency,
                        Amount});
            return ((CurrencyConversion)(results[0]));
        }
        
        /// <remarks/>
        public void currencyConversionAsync(ueSecurityToken Token, string FromCurrency, string ToCurrency, double Amount) {
            this.currencyConversionAsync(Token, FromCurrency, ToCurrency, Amount, null);
        }
        
        /// <remarks/>
        public void currencyConversionAsync(ueSecurityToken Token, string FromCurrency, string ToCurrency, double Amount, object userState) {
            if ((this.currencyConversionOperationCompleted == null)) {
                this.currencyConversionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncurrencyConversionOperationCompleted);
            }
            this.InvokeAsync("currencyConversion", new object[] {
                        Token,
                        FromCurrency,
                        ToCurrency,
                        Amount}, this.currencyConversionOperationCompleted, userState);
        }
        
        private void OncurrencyConversionOperationCompleted(object arg) {
            if ((this.currencyConversionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.currencyConversionCompleted(this, new currencyConversionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteCustomerReturn")]
        public bool deleteCustomer(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum) {
            object[] results = this.Invoke("deleteCustomer", new object[] {
                        Token,
                        CustNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCustomerAsync(ueSecurityToken Token, string CustNum) {
            this.deleteCustomerAsync(Token, CustNum, null);
        }
        
        /// <remarks/>
        public void deleteCustomerAsync(ueSecurityToken Token, string CustNum, object userState) {
            if ((this.deleteCustomerOperationCompleted == null)) {
                this.deleteCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCustomerOperationCompleted);
            }
            this.InvokeAsync("deleteCustomer", new object[] {
                        Token,
                        CustNum}, this.deleteCustomerOperationCompleted, userState);
        }
        
        private void OndeleteCustomerOperationCompleted(object arg) {
            if ((this.deleteCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCustomerCompleted(this, new deleteCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteCustomerPaymentMethodReturn")]
        public bool deleteCustomerPaymentMethod(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Custnum, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string PaymentMethodID) {
            object[] results = this.Invoke("deleteCustomerPaymentMethod", new object[] {
                        Token,
                        Custnum,
                        PaymentMethodID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCustomerPaymentMethodAsync(ueSecurityToken Token, string Custnum, string PaymentMethodID) {
            this.deleteCustomerPaymentMethodAsync(Token, Custnum, PaymentMethodID, null);
        }
        
        /// <remarks/>
        public void deleteCustomerPaymentMethodAsync(ueSecurityToken Token, string Custnum, string PaymentMethodID, object userState) {
            if ((this.deleteCustomerPaymentMethodOperationCompleted == null)) {
                this.deleteCustomerPaymentMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCustomerPaymentMethodOperationCompleted);
            }
            this.InvokeAsync("deleteCustomerPaymentMethod", new object[] {
                        Token,
                        Custnum,
                        PaymentMethodID}, this.deleteCustomerPaymentMethodOperationCompleted, userState);
        }
        
        private void OndeleteCustomerPaymentMethodOperationCompleted(object arg) {
            if ((this.deleteCustomerPaymentMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCustomerPaymentMethodCompleted(this, new deleteCustomerPaymentMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteProductReturn")]
        public bool deleteProduct(ueSecurityToken Token, string ProductRefNum) {
            object[] results = this.Invoke("deleteProduct", new object[] {
                        Token,
                        ProductRefNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteProductAsync(ueSecurityToken Token, string ProductRefNum) {
            this.deleteProductAsync(Token, ProductRefNum, null);
        }
        
        /// <remarks/>
        public void deleteProductAsync(ueSecurityToken Token, string ProductRefNum, object userState) {
            if ((this.deleteProductOperationCompleted == null)) {
                this.deleteProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteProductOperationCompleted);
            }
            this.InvokeAsync("deleteProduct", new object[] {
                        Token,
                        ProductRefNum}, this.deleteProductOperationCompleted, userState);
        }
        
        private void OndeleteProductOperationCompleted(object arg) {
            if ((this.deleteProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteProductCompleted(this, new deleteProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteProductCategoryReturn")]
        public bool deleteProductCategory(ueSecurityToken Token, string ProductCategoryRefNum) {
            object[] results = this.Invoke("deleteProductCategory", new object[] {
                        Token,
                        ProductCategoryRefNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteProductCategoryAsync(ueSecurityToken Token, string ProductCategoryRefNum) {
            this.deleteProductCategoryAsync(Token, ProductCategoryRefNum, null);
        }
        
        /// <remarks/>
        public void deleteProductCategoryAsync(ueSecurityToken Token, string ProductCategoryRefNum, object userState) {
            if ((this.deleteProductCategoryOperationCompleted == null)) {
                this.deleteProductCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteProductCategoryOperationCompleted);
            }
            this.InvokeAsync("deleteProductCategory", new object[] {
                        Token,
                        ProductCategoryRefNum}, this.deleteProductCategoryOperationCompleted, userState);
        }
        
        private void OndeleteProductCategoryOperationCompleted(object arg) {
            if ((this.deleteProductCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteProductCategoryCompleted(this, new deleteProductCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteReceiptReturn")]
        public bool deleteReceipt(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string ReceiptRefNum) {
            object[] results = this.Invoke("deleteReceipt", new object[] {
                        Token,
                        ReceiptRefNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteReceiptAsync(ueSecurityToken Token, string ReceiptRefNum) {
            this.deleteReceiptAsync(Token, ReceiptRefNum, null);
        }
        
        /// <remarks/>
        public void deleteReceiptAsync(ueSecurityToken Token, string ReceiptRefNum, object userState) {
            if ((this.deleteReceiptOperationCompleted == null)) {
                this.deleteReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteReceiptOperationCompleted);
            }
            this.InvokeAsync("deleteReceipt", new object[] {
                        Token,
                        ReceiptRefNum}, this.deleteReceiptOperationCompleted, userState);
        }
        
        private void OndeleteReceiptOperationCompleted(object arg) {
            if ((this.deleteReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteReceiptCompleted(this, new deleteReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("disableCustomerReturn")]
        public bool disableCustomer(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum) {
            object[] results = this.Invoke("disableCustomer", new object[] {
                        Token,
                        CustNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void disableCustomerAsync(ueSecurityToken Token, string CustNum) {
            this.disableCustomerAsync(Token, CustNum, null);
        }
        
        /// <remarks/>
        public void disableCustomerAsync(ueSecurityToken Token, string CustNum, object userState) {
            if ((this.disableCustomerOperationCompleted == null)) {
                this.disableCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisableCustomerOperationCompleted);
            }
            this.InvokeAsync("disableCustomer", new object[] {
                        Token,
                        CustNum}, this.disableCustomerOperationCompleted, userState);
        }
        
        private void OndisableCustomerOperationCompleted(object arg) {
            if ((this.disableCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.disableCustomerCompleted(this, new disableCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("emailTransactionReceiptReturn")]
        public bool emailTransactionReceipt(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string ReceiptRefNum, string Email) {
            object[] results = this.Invoke("emailTransactionReceipt", new object[] {
                        Token,
                        RefNum,
                        ReceiptRefNum,
                        Email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void emailTransactionReceiptAsync(ueSecurityToken Token, string RefNum, string ReceiptRefNum, string Email) {
            this.emailTransactionReceiptAsync(Token, RefNum, ReceiptRefNum, Email, null);
        }
        
        /// <remarks/>
        public void emailTransactionReceiptAsync(ueSecurityToken Token, string RefNum, string ReceiptRefNum, string Email, object userState) {
            if ((this.emailTransactionReceiptOperationCompleted == null)) {
                this.emailTransactionReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnemailTransactionReceiptOperationCompleted);
            }
            this.InvokeAsync("emailTransactionReceipt", new object[] {
                        Token,
                        RefNum,
                        ReceiptRefNum,
                        Email}, this.emailTransactionReceiptOperationCompleted, userState);
        }
        
        private void OnemailTransactionReceiptOperationCompleted(object arg) {
            if ((this.emailTransactionReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.emailTransactionReceiptCompleted(this, new emailTransactionReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("emailTransactionReceiptByNameReturn")]
        public bool emailTransactionReceiptByName(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, string ReceiptName, string Email) {
            object[] results = this.Invoke("emailTransactionReceiptByName", new object[] {
                        Token,
                        RefNum,
                        ReceiptName,
                        Email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void emailTransactionReceiptByNameAsync(ueSecurityToken Token, string RefNum, string ReceiptName, string Email) {
            this.emailTransactionReceiptByNameAsync(Token, RefNum, ReceiptName, Email, null);
        }
        
        /// <remarks/>
        public void emailTransactionReceiptByNameAsync(ueSecurityToken Token, string RefNum, string ReceiptName, string Email, object userState) {
            if ((this.emailTransactionReceiptByNameOperationCompleted == null)) {
                this.emailTransactionReceiptByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnemailTransactionReceiptByNameOperationCompleted);
            }
            this.InvokeAsync("emailTransactionReceiptByName", new object[] {
                        Token,
                        RefNum,
                        ReceiptName,
                        Email}, this.emailTransactionReceiptByNameOperationCompleted, userState);
        }
        
        private void OnemailTransactionReceiptByNameOperationCompleted(object arg) {
            if ((this.emailTransactionReceiptByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.emailTransactionReceiptByNameCompleted(this, new emailTransactionReceiptByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("enableCustomerReturn")]
        public bool enableCustomer(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum) {
            object[] results = this.Invoke("enableCustomer", new object[] {
                        Token,
                        CustNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void enableCustomerAsync(ueSecurityToken Token, string CustNum) {
            this.enableCustomerAsync(Token, CustNum, null);
        }
        
        /// <remarks/>
        public void enableCustomerAsync(ueSecurityToken Token, string CustNum, object userState) {
            if ((this.enableCustomerOperationCompleted == null)) {
                this.enableCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenableCustomerOperationCompleted);
            }
            this.InvokeAsync("enableCustomer", new object[] {
                        Token,
                        CustNum}, this.enableCustomerOperationCompleted, userState);
        }
        
        private void OnenableCustomerOperationCompleted(object arg) {
            if ((this.enableCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enableCustomerCompleted(this, new enableCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAccountDetailsReturn")]
        public AccountDetails getAccountDetails(ueSecurityToken Token) {
            object[] results = this.Invoke("getAccountDetails", new object[] {
                        Token});
            return ((AccountDetails)(results[0]));
        }
        
        /// <remarks/>
        public void getAccountDetailsAsync(ueSecurityToken Token) {
            this.getAccountDetailsAsync(Token, null);
        }
        
        /// <remarks/>
        public void getAccountDetailsAsync(ueSecurityToken Token, object userState) {
            if ((this.getAccountDetailsOperationCompleted == null)) {
                this.getAccountDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountDetailsOperationCompleted);
            }
            this.InvokeAsync("getAccountDetails", new object[] {
                        Token}, this.getAccountDetailsOperationCompleted, userState);
        }
        
        private void OngetAccountDetailsOperationCompleted(object arg) {
            if ((this.getAccountDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountDetailsCompleted(this, new getAccountDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getBankListDetailsReturn")]
        public Bank[] getBankList(ueSecurityToken Token) {
            object[] results = this.Invoke("getBankList", new object[] {
                        Token});
            return ((Bank[])(results[0]));
        }
        
        /// <remarks/>
        public void getBankListAsync(ueSecurityToken Token) {
            this.getBankListAsync(Token, null);
        }
        
        /// <remarks/>
        public void getBankListAsync(ueSecurityToken Token, object userState) {
            if ((this.getBankListOperationCompleted == null)) {
                this.getBankListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBankListOperationCompleted);
            }
            this.InvokeAsync("getBankList", new object[] {
                        Token}, this.getBankListOperationCompleted, userState);
        }
        
        private void OngetBankListOperationCompleted(object arg) {
            if ((this.getBankListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBankListCompleted(this, new getBankListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getBatchStatusReturn")]
        public BatchStatus getBatchStatus(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string BatchRefNum) {
            object[] results = this.Invoke("getBatchStatus", new object[] {
                        Token,
                        BatchRefNum});
            return ((BatchStatus)(results[0]));
        }
        
        /// <remarks/>
        public void getBatchStatusAsync(ueSecurityToken Token, string BatchRefNum) {
            this.getBatchStatusAsync(Token, BatchRefNum, null);
        }
        
        /// <remarks/>
        public void getBatchStatusAsync(ueSecurityToken Token, string BatchRefNum, object userState) {
            if ((this.getBatchStatusOperationCompleted == null)) {
                this.getBatchStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBatchStatusOperationCompleted);
            }
            this.InvokeAsync("getBatchStatus", new object[] {
                        Token,
                        BatchRefNum}, this.getBatchStatusOperationCompleted, userState);
        }
        
        private void OngetBatchStatusOperationCompleted(object arg) {
            if ((this.getBatchStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBatchStatusCompleted(this, new getBatchStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getBatchTransactionsReturn")]
        public TransactionObject[] getBatchTransactions(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string BatchRefNum) {
            object[] results = this.Invoke("getBatchTransactions", new object[] {
                        Token,
                        BatchRefNum});
            return ((TransactionObject[])(results[0]));
        }
        
        /// <remarks/>
        public void getBatchTransactionsAsync(ueSecurityToken Token, string BatchRefNum) {
            this.getBatchTransactionsAsync(Token, BatchRefNum, null);
        }
        
        /// <remarks/>
        public void getBatchTransactionsAsync(ueSecurityToken Token, string BatchRefNum, object userState) {
            if ((this.getBatchTransactionsOperationCompleted == null)) {
                this.getBatchTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBatchTransactionsOperationCompleted);
            }
            this.InvokeAsync("getBatchTransactions", new object[] {
                        Token,
                        BatchRefNum}, this.getBatchTransactionsOperationCompleted, userState);
        }
        
        private void OngetBatchTransactionsOperationCompleted(object arg) {
            if ((this.getBatchTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBatchTransactionsCompleted(this, new getBatchTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getBatchUploadStatusReturn")]
        public BatchUploadStatus getBatchUploadStatus(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string UploadRefNum) {
            object[] results = this.Invoke("getBatchUploadStatus", new object[] {
                        Token,
                        UploadRefNum});
            return ((BatchUploadStatus)(results[0]));
        }
        
        /// <remarks/>
        public void getBatchUploadStatusAsync(ueSecurityToken Token, string UploadRefNum) {
            this.getBatchUploadStatusAsync(Token, UploadRefNum, null);
        }
        
        /// <remarks/>
        public void getBatchUploadStatusAsync(ueSecurityToken Token, string UploadRefNum, object userState) {
            if ((this.getBatchUploadStatusOperationCompleted == null)) {
                this.getBatchUploadStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBatchUploadStatusOperationCompleted);
            }
            this.InvokeAsync("getBatchUploadStatus", new object[] {
                        Token,
                        UploadRefNum}, this.getBatchUploadStatusOperationCompleted, userState);
        }
        
        private void OngetBatchUploadStatusOperationCompleted(object arg) {
            if ((this.getBatchUploadStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBatchUploadStatusCompleted(this, new getBatchUploadStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCheckTraceReturn")]
        public CheckTrace getCheckTrace(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum) {
            object[] results = this.Invoke("getCheckTrace", new object[] {
                        Token,
                        RefNum});
            return ((CheckTrace)(results[0]));
        }
        
        /// <remarks/>
        public void getCheckTraceAsync(ueSecurityToken Token, string RefNum) {
            this.getCheckTraceAsync(Token, RefNum, null);
        }
        
        /// <remarks/>
        public void getCheckTraceAsync(ueSecurityToken Token, string RefNum, object userState) {
            if ((this.getCheckTraceOperationCompleted == null)) {
                this.getCheckTraceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCheckTraceOperationCompleted);
            }
            this.InvokeAsync("getCheckTrace", new object[] {
                        Token,
                        RefNum}, this.getCheckTraceOperationCompleted, userState);
        }
        
        private void OngetCheckTraceOperationCompleted(object arg) {
            if ((this.getCheckTraceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCheckTraceCompleted(this, new getCheckTraceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCustomerReturn")]
        public CustomerObject getCustomer(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum) {
            object[] results = this.Invoke("getCustomer", new object[] {
                        Token,
                        CustNum});
            return ((CustomerObject)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerAsync(ueSecurityToken Token, string CustNum) {
            this.getCustomerAsync(Token, CustNum, null);
        }
        
        /// <remarks/>
        public void getCustomerAsync(ueSecurityToken Token, string CustNum, object userState) {
            if ((this.getCustomerOperationCompleted == null)) {
                this.getCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerOperationCompleted);
            }
            this.InvokeAsync("getCustomer", new object[] {
                        Token,
                        CustNum}, this.getCustomerOperationCompleted, userState);
        }
        
        private void OngetCustomerOperationCompleted(object arg) {
            if ((this.getCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerCompleted(this, new getCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCustomerHistoryReturn")]
        public TransactionSearchResult getCustomerHistory(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum) {
            object[] results = this.Invoke("getCustomerHistory", new object[] {
                        Token,
                        CustNum});
            return ((TransactionSearchResult)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerHistoryAsync(ueSecurityToken Token, string CustNum) {
            this.getCustomerHistoryAsync(Token, CustNum, null);
        }
        
        /// <remarks/>
        public void getCustomerHistoryAsync(ueSecurityToken Token, string CustNum, object userState) {
            if ((this.getCustomerHistoryOperationCompleted == null)) {
                this.getCustomerHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerHistoryOperationCompleted);
            }
            this.InvokeAsync("getCustomerHistory", new object[] {
                        Token,
                        CustNum}, this.getCustomerHistoryOperationCompleted, userState);
        }
        
        private void OngetCustomerHistoryOperationCompleted(object arg) {
            if ((this.getCustomerHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerHistoryCompleted(this, new getCustomerHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCustomerPaymentMethodReturn")]
        public PaymentMethod getCustomerPaymentMethod(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string MethodID) {
            object[] results = this.Invoke("getCustomerPaymentMethod", new object[] {
                        Token,
                        CustNum,
                        MethodID});
            return ((PaymentMethod)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerPaymentMethodAsync(ueSecurityToken Token, string CustNum, string MethodID) {
            this.getCustomerPaymentMethodAsync(Token, CustNum, MethodID, null);
        }
        
        /// <remarks/>
        public void getCustomerPaymentMethodAsync(ueSecurityToken Token, string CustNum, string MethodID, object userState) {
            if ((this.getCustomerPaymentMethodOperationCompleted == null)) {
                this.getCustomerPaymentMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerPaymentMethodOperationCompleted);
            }
            this.InvokeAsync("getCustomerPaymentMethod", new object[] {
                        Token,
                        CustNum,
                        MethodID}, this.getCustomerPaymentMethodOperationCompleted, userState);
        }
        
        private void OngetCustomerPaymentMethodOperationCompleted(object arg) {
            if ((this.getCustomerPaymentMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerPaymentMethodCompleted(this, new getCustomerPaymentMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCustomerPaymentMethodsReturn")]
        public PaymentMethod[] getCustomerPaymentMethods(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum) {
            object[] results = this.Invoke("getCustomerPaymentMethods", new object[] {
                        Token,
                        CustNum});
            return ((PaymentMethod[])(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerPaymentMethodsAsync(ueSecurityToken Token, string CustNum) {
            this.getCustomerPaymentMethodsAsync(Token, CustNum, null);
        }
        
        /// <remarks/>
        public void getCustomerPaymentMethodsAsync(ueSecurityToken Token, string CustNum, object userState) {
            if ((this.getCustomerPaymentMethodsOperationCompleted == null)) {
                this.getCustomerPaymentMethodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerPaymentMethodsOperationCompleted);
            }
            this.InvokeAsync("getCustomerPaymentMethods", new object[] {
                        Token,
                        CustNum}, this.getCustomerPaymentMethodsOperationCompleted, userState);
        }
        
        private void OngetCustomerPaymentMethodsOperationCompleted(object arg) {
            if ((this.getCustomerPaymentMethodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerPaymentMethodsCompleted(this, new getCustomerPaymentMethodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCustomerReportReturn")]
        public string getCustomerReport(ueSecurityToken Token, string Report, FieldValue[] Options, string Format) {
            object[] results = this.Invoke("getCustomerReport", new object[] {
                        Token,
                        Report,
                        Options,
                        Format});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerReportAsync(ueSecurityToken Token, string Report, FieldValue[] Options, string Format) {
            this.getCustomerReportAsync(Token, Report, Options, Format, null);
        }
        
        /// <remarks/>
        public void getCustomerReportAsync(ueSecurityToken Token, string Report, FieldValue[] Options, string Format, object userState) {
            if ((this.getCustomerReportOperationCompleted == null)) {
                this.getCustomerReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerReportOperationCompleted);
            }
            this.InvokeAsync("getCustomerReport", new object[] {
                        Token,
                        Report,
                        Options,
                        Format}, this.getCustomerReportOperationCompleted, userState);
        }
        
        private void OngetCustomerReportOperationCompleted(object arg) {
            if ((this.getCustomerReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerReportCompleted(this, new getCustomerReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCustomFieldsReturn")]
        public FieldValue[] getCustomFields(ueSecurityToken Token) {
            object[] results = this.Invoke("getCustomFields", new object[] {
                        Token});
            return ((FieldValue[])(results[0]));
        }
        
        /// <remarks/>
        public void getCustomFieldsAsync(ueSecurityToken Token) {
            this.getCustomFieldsAsync(Token, null);
        }
        
        /// <remarks/>
        public void getCustomFieldsAsync(ueSecurityToken Token, object userState) {
            if ((this.getCustomFieldsOperationCompleted == null)) {
                this.getCustomFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomFieldsOperationCompleted);
            }
            this.InvokeAsync("getCustomFields", new object[] {
                        Token}, this.getCustomFieldsOperationCompleted, userState);
        }
        
        private void OngetCustomFieldsOperationCompleted(object arg) {
            if ((this.getCustomFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomFieldsCompleted(this, new getCustomFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProductReturn")]
        public Product getProduct(ueSecurityToken Token, string ProductRefNum) {
            object[] results = this.Invoke("getProduct", new object[] {
                        Token,
                        ProductRefNum});
            return ((Product)(results[0]));
        }
        
        /// <remarks/>
        public void getProductAsync(ueSecurityToken Token, string ProductRefNum) {
            this.getProductAsync(Token, ProductRefNum, null);
        }
        
        /// <remarks/>
        public void getProductAsync(ueSecurityToken Token, string ProductRefNum, object userState) {
            if ((this.getProductOperationCompleted == null)) {
                this.getProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProductOperationCompleted);
            }
            this.InvokeAsync("getProduct", new object[] {
                        Token,
                        ProductRefNum}, this.getProductOperationCompleted, userState);
        }
        
        private void OngetProductOperationCompleted(object arg) {
            if ((this.getProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProductCompleted(this, new getProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProductCategoryReturn")]
        public ProductCategory getProductCategory(ueSecurityToken Token, string ProductCategoryRefNum) {
            object[] results = this.Invoke("getProductCategory", new object[] {
                        Token,
                        ProductCategoryRefNum});
            return ((ProductCategory)(results[0]));
        }
        
        /// <remarks/>
        public void getProductCategoryAsync(ueSecurityToken Token, string ProductCategoryRefNum) {
            this.getProductCategoryAsync(Token, ProductCategoryRefNum, null);
        }
        
        /// <remarks/>
        public void getProductCategoryAsync(ueSecurityToken Token, string ProductCategoryRefNum, object userState) {
            if ((this.getProductCategoryOperationCompleted == null)) {
                this.getProductCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProductCategoryOperationCompleted);
            }
            this.InvokeAsync("getProductCategory", new object[] {
                        Token,
                        ProductCategoryRefNum}, this.getProductCategoryOperationCompleted, userState);
        }
        
        private void OngetProductCategoryOperationCompleted(object arg) {
            if ((this.getProductCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProductCategoryCompleted(this, new getProductCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProductCategoriesReturn")]
        public ProductCategory[] getProductCategories(ueSecurityToken Token) {
            object[] results = this.Invoke("getProductCategories", new object[] {
                        Token});
            return ((ProductCategory[])(results[0]));
        }
        
        /// <remarks/>
        public void getProductCategoriesAsync(ueSecurityToken Token) {
            this.getProductCategoriesAsync(Token, null);
        }
        
        /// <remarks/>
        public void getProductCategoriesAsync(ueSecurityToken Token, object userState) {
            if ((this.getProductCategoriesOperationCompleted == null)) {
                this.getProductCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProductCategoriesOperationCompleted);
            }
            this.InvokeAsync("getProductCategories", new object[] {
                        Token}, this.getProductCategoriesOperationCompleted, userState);
        }
        
        private void OngetProductCategoriesOperationCompleted(object arg) {
            if ((this.getProductCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProductCategoriesCompleted(this, new getProductCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProductInventoryReturn")]
        public ProductInventory[] getProductInventory(ueSecurityToken Token, string ProductRefNum) {
            object[] results = this.Invoke("getProductInventory", new object[] {
                        Token,
                        ProductRefNum});
            return ((ProductInventory[])(results[0]));
        }
        
        /// <remarks/>
        public void getProductInventoryAsync(ueSecurityToken Token, string ProductRefNum) {
            this.getProductInventoryAsync(Token, ProductRefNum, null);
        }
        
        /// <remarks/>
        public void getProductInventoryAsync(ueSecurityToken Token, string ProductRefNum, object userState) {
            if ((this.getProductInventoryOperationCompleted == null)) {
                this.getProductInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProductInventoryOperationCompleted);
            }
            this.InvokeAsync("getProductInventory", new object[] {
                        Token,
                        ProductRefNum}, this.getProductInventoryOperationCompleted, userState);
        }
        
        private void OngetProductInventoryOperationCompleted(object arg) {
            if ((this.getProductInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProductInventoryCompleted(this, new getProductInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProductInventoryLocationReturn")]
        public ProductInventoryLocation getProductInventoryLocation(ueSecurityToken Token, string InventoryLocation) {
            object[] results = this.Invoke("getProductInventoryLocation", new object[] {
                        Token,
                        InventoryLocation});
            return ((ProductInventoryLocation)(results[0]));
        }
        
        /// <remarks/>
        public void getProductInventoryLocationAsync(ueSecurityToken Token, string InventoryLocation) {
            this.getProductInventoryLocationAsync(Token, InventoryLocation, null);
        }
        
        /// <remarks/>
        public void getProductInventoryLocationAsync(ueSecurityToken Token, string InventoryLocation, object userState) {
            if ((this.getProductInventoryLocationOperationCompleted == null)) {
                this.getProductInventoryLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProductInventoryLocationOperationCompleted);
            }
            this.InvokeAsync("getProductInventoryLocation", new object[] {
                        Token,
                        InventoryLocation}, this.getProductInventoryLocationOperationCompleted, userState);
        }
        
        private void OngetProductInventoryLocationOperationCompleted(object arg) {
            if ((this.getProductInventoryLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProductInventoryLocationCompleted(this, new getProductInventoryLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProductInventoryLocationsReturn")]
        public ProductInventoryLocation[] getProductInventoryLocations(ueSecurityToken Token) {
            object[] results = this.Invoke("getProductInventoryLocations", new object[] {
                        Token});
            return ((ProductInventoryLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void getProductInventoryLocationsAsync(ueSecurityToken Token) {
            this.getProductInventoryLocationsAsync(Token, null);
        }
        
        /// <remarks/>
        public void getProductInventoryLocationsAsync(ueSecurityToken Token, object userState) {
            if ((this.getProductInventoryLocationsOperationCompleted == null)) {
                this.getProductInventoryLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProductInventoryLocationsOperationCompleted);
            }
            this.InvokeAsync("getProductInventoryLocations", new object[] {
                        Token}, this.getProductInventoryLocationsOperationCompleted, userState);
        }
        
        private void OngetProductInventoryLocationsOperationCompleted(object arg) {
            if ((this.getProductInventoryLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProductInventoryLocationsCompleted(this, new getProductInventoryLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getReceiptReturn")]
        public Receipt getReceipt(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string ReceiptRefNum) {
            object[] results = this.Invoke("getReceipt", new object[] {
                        Token,
                        ReceiptRefNum});
            return ((Receipt)(results[0]));
        }
        
        /// <remarks/>
        public void getReceiptAsync(ueSecurityToken Token, string ReceiptRefNum) {
            this.getReceiptAsync(Token, ReceiptRefNum, null);
        }
        
        /// <remarks/>
        public void getReceiptAsync(ueSecurityToken Token, string ReceiptRefNum, object userState) {
            if ((this.getReceiptOperationCompleted == null)) {
                this.getReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReceiptOperationCompleted);
            }
            this.InvokeAsync("getReceipt", new object[] {
                        Token,
                        ReceiptRefNum}, this.getReceiptOperationCompleted, userState);
        }
        
        private void OngetReceiptOperationCompleted(object arg) {
            if ((this.getReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReceiptCompleted(this, new getReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getReceiptByNameReturn")]
        public Receipt getReceiptByName(ueSecurityToken Token, string Name) {
            object[] results = this.Invoke("getReceiptByName", new object[] {
                        Token,
                        Name});
            return ((Receipt)(results[0]));
        }
        
        /// <remarks/>
        public void getReceiptByNameAsync(ueSecurityToken Token, string Name) {
            this.getReceiptByNameAsync(Token, Name, null);
        }
        
        /// <remarks/>
        public void getReceiptByNameAsync(ueSecurityToken Token, string Name, object userState) {
            if ((this.getReceiptByNameOperationCompleted == null)) {
                this.getReceiptByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReceiptByNameOperationCompleted);
            }
            this.InvokeAsync("getReceiptByName", new object[] {
                        Token,
                        Name}, this.getReceiptByNameOperationCompleted, userState);
        }
        
        private void OngetReceiptByNameOperationCompleted(object arg) {
            if ((this.getReceiptByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReceiptByNameCompleted(this, new getReceiptByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getReceiptsReturn")]
        public Receipt[] getReceipts(ueSecurityToken Token, string Target) {
            object[] results = this.Invoke("getReceipts", new object[] {
                        Token,
                        Target});
            return ((Receipt[])(results[0]));
        }
        
        /// <remarks/>
        public void getReceiptsAsync(ueSecurityToken Token, string Target) {
            this.getReceiptsAsync(Token, Target, null);
        }
        
        /// <remarks/>
        public void getReceiptsAsync(ueSecurityToken Token, string Target, object userState) {
            if ((this.getReceiptsOperationCompleted == null)) {
                this.getReceiptsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReceiptsOperationCompleted);
            }
            this.InvokeAsync("getReceipts", new object[] {
                        Token,
                        Target}, this.getReceiptsOperationCompleted, userState);
        }
        
        private void OngetReceiptsOperationCompleted(object arg) {
            if ((this.getReceiptsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReceiptsCompleted(this, new getReceiptsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getReportReturn")]
        public string getReport(ueSecurityToken Token, string Report, FieldValue[] Options, string Format) {
            object[] results = this.Invoke("getReport", new object[] {
                        Token,
                        Report,
                        Options,
                        Format});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getReportAsync(ueSecurityToken Token, string Report, FieldValue[] Options, string Format) {
            this.getReportAsync(Token, Report, Options, Format, null);
        }
        
        /// <remarks/>
        public void getReportAsync(ueSecurityToken Token, string Report, FieldValue[] Options, string Format, object userState) {
            if ((this.getReportOperationCompleted == null)) {
                this.getReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReportOperationCompleted);
            }
            this.InvokeAsync("getReport", new object[] {
                        Token,
                        Report,
                        Options,
                        Format}, this.getReportOperationCompleted, userState);
        }
        
        private void OngetReportOperationCompleted(object arg) {
            if ((this.getReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getReportCompleted(this, new getReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getSessionReturn")]
        public TransactionSession getSession(ueSecurityToken Token) {
            object[] results = this.Invoke("getSession", new object[] {
                        Token});
            return ((TransactionSession)(results[0]));
        }
        
        /// <remarks/>
        public void getSessionAsync(ueSecurityToken Token) {
            this.getSessionAsync(Token, null);
        }
        
        /// <remarks/>
        public void getSessionAsync(ueSecurityToken Token, object userState) {
            if ((this.getSessionOperationCompleted == null)) {
                this.getSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSessionOperationCompleted);
            }
            this.InvokeAsync("getSession", new object[] {
                        Token}, this.getSessionOperationCompleted, userState);
        }
        
        private void OngetSessionOperationCompleted(object arg) {
            if ((this.getSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSessionCompleted(this, new getSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getSupportedCurrenciesReturn")]
        public CurrencyObject[] getSupportedCurrencies(ueSecurityToken Token) {
            object[] results = this.Invoke("getSupportedCurrencies", new object[] {
                        Token});
            return ((CurrencyObject[])(results[0]));
        }
        
        /// <remarks/>
        public void getSupportedCurrenciesAsync(ueSecurityToken Token) {
            this.getSupportedCurrenciesAsync(Token, null);
        }
        
        /// <remarks/>
        public void getSupportedCurrenciesAsync(ueSecurityToken Token, object userState) {
            if ((this.getSupportedCurrenciesOperationCompleted == null)) {
                this.getSupportedCurrenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSupportedCurrenciesOperationCompleted);
            }
            this.InvokeAsync("getSupportedCurrencies", new object[] {
                        Token}, this.getSupportedCurrenciesOperationCompleted, userState);
        }
        
        private void OngetSupportedCurrenciesOperationCompleted(object arg) {
            if ((this.getSupportedCurrenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSupportedCurrenciesCompleted(this, new getSupportedCurrenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getSyncLogReturn")]
        public SyncLog[] getSyncLog(ueSecurityToken Token, string ObjectName, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string FromPosition) {
            object[] results = this.Invoke("getSyncLog", new object[] {
                        Token,
                        ObjectName,
                        FromPosition});
            return ((SyncLog[])(results[0]));
        }
        
        /// <remarks/>
        public void getSyncLogAsync(ueSecurityToken Token, string ObjectName, string FromPosition) {
            this.getSyncLogAsync(Token, ObjectName, FromPosition, null);
        }
        
        /// <remarks/>
        public void getSyncLogAsync(ueSecurityToken Token, string ObjectName, string FromPosition, object userState) {
            if ((this.getSyncLogOperationCompleted == null)) {
                this.getSyncLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSyncLogOperationCompleted);
            }
            this.InvokeAsync("getSyncLog", new object[] {
                        Token,
                        ObjectName,
                        FromPosition}, this.getSyncLogOperationCompleted, userState);
        }
        
        private void OngetSyncLogOperationCompleted(object arg) {
            if ((this.getSyncLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSyncLogCompleted(this, new getSyncLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getSyncLogCurrentPositionReturn", DataType="integer")]
        public string getSyncLogCurrentPosition(ueSecurityToken Token, string ObjectName) {
            object[] results = this.Invoke("getSyncLogCurrentPosition", new object[] {
                        Token,
                        ObjectName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSyncLogCurrentPositionAsync(ueSecurityToken Token, string ObjectName) {
            this.getSyncLogCurrentPositionAsync(Token, ObjectName, null);
        }
        
        /// <remarks/>
        public void getSyncLogCurrentPositionAsync(ueSecurityToken Token, string ObjectName, object userState) {
            if ((this.getSyncLogCurrentPositionOperationCompleted == null)) {
                this.getSyncLogCurrentPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSyncLogCurrentPositionOperationCompleted);
            }
            this.InvokeAsync("getSyncLogCurrentPosition", new object[] {
                        Token,
                        ObjectName}, this.getSyncLogCurrentPositionOperationCompleted, userState);
        }
        
        private void OngetSyncLogCurrentPositionOperationCompleted(object arg) {
            if ((this.getSyncLogCurrentPositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSyncLogCurrentPositionCompleted(this, new getSyncLogCurrentPositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getSystemInfoReturn")]
        public SystemInfo getSystemInfo(ueSecurityToken Token) {
            object[] results = this.Invoke("getSystemInfo", new object[] {
                        Token});
            return ((SystemInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getSystemInfoAsync(ueSecurityToken Token) {
            this.getSystemInfoAsync(Token, null);
        }
        
        /// <remarks/>
        public void getSystemInfoAsync(ueSecurityToken Token, object userState) {
            if ((this.getSystemInfoOperationCompleted == null)) {
                this.getSystemInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSystemInfoOperationCompleted);
            }
            this.InvokeAsync("getSystemInfo", new object[] {
                        Token}, this.getSystemInfoOperationCompleted, userState);
        }
        
        private void OngetSystemInfoOperationCompleted(object arg) {
            if ((this.getSystemInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSystemInfoCompleted(this, new getSystemInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTransactionReturn")]
        public TransactionObject getTransaction(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum) {
            object[] results = this.Invoke("getTransaction", new object[] {
                        Token,
                        RefNum});
            return ((TransactionObject)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionAsync(ueSecurityToken Token, string RefNum) {
            this.getTransactionAsync(Token, RefNum, null);
        }
        
        /// <remarks/>
        public void getTransactionAsync(ueSecurityToken Token, string RefNum, object userState) {
            if ((this.getTransactionOperationCompleted == null)) {
                this.getTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionOperationCompleted);
            }
            this.InvokeAsync("getTransaction", new object[] {
                        Token,
                        RefNum}, this.getTransactionOperationCompleted, userState);
        }
        
        private void OngetTransactionOperationCompleted(object arg) {
            if ((this.getTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionCompleted(this, new getTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTransactionCustomReturn")]
        public FieldValue[] getTransactionCustom(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, string[] Fields) {
            object[] results = this.Invoke("getTransactionCustom", new object[] {
                        Token,
                        RefNum,
                        Fields});
            return ((FieldValue[])(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionCustomAsync(ueSecurityToken Token, string RefNum, string[] Fields) {
            this.getTransactionCustomAsync(Token, RefNum, Fields, null);
        }
        
        /// <remarks/>
        public void getTransactionCustomAsync(ueSecurityToken Token, string RefNum, string[] Fields, object userState) {
            if ((this.getTransactionCustomOperationCompleted == null)) {
                this.getTransactionCustomOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionCustomOperationCompleted);
            }
            this.InvokeAsync("getTransactionCustom", new object[] {
                        Token,
                        RefNum,
                        Fields}, this.getTransactionCustomOperationCompleted, userState);
        }
        
        private void OngetTransactionCustomOperationCompleted(object arg) {
            if ((this.getTransactionCustomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionCustomCompleted(this, new getTransactionCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTransactionProfileReturn")]
        public TransactionProfile getTransactionProfile(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum) {
            object[] results = this.Invoke("getTransactionProfile", new object[] {
                        Token,
                        RefNum});
            return ((TransactionProfile)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionProfileAsync(ueSecurityToken Token, string RefNum) {
            this.getTransactionProfileAsync(Token, RefNum, null);
        }
        
        /// <remarks/>
        public void getTransactionProfileAsync(ueSecurityToken Token, string RefNum, object userState) {
            if ((this.getTransactionProfileOperationCompleted == null)) {
                this.getTransactionProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionProfileOperationCompleted);
            }
            this.InvokeAsync("getTransactionProfile", new object[] {
                        Token,
                        RefNum}, this.getTransactionProfileOperationCompleted, userState);
        }
        
        private void OngetTransactionProfileOperationCompleted(object arg) {
            if ((this.getTransactionProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionProfileCompleted(this, new getTransactionProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTransactionReportReturn")]
        public string getTransactionReport(ueSecurityToken Token, string StartDate, string EndDate, string Report, string Format) {
            object[] results = this.Invoke("getTransactionReport", new object[] {
                        Token,
                        StartDate,
                        EndDate,
                        Report,
                        Format});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionReportAsync(ueSecurityToken Token, string StartDate, string EndDate, string Report, string Format) {
            this.getTransactionReportAsync(Token, StartDate, EndDate, Report, Format, null);
        }
        
        /// <remarks/>
        public void getTransactionReportAsync(ueSecurityToken Token, string StartDate, string EndDate, string Report, string Format, object userState) {
            if ((this.getTransactionReportOperationCompleted == null)) {
                this.getTransactionReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionReportOperationCompleted);
            }
            this.InvokeAsync("getTransactionReport", new object[] {
                        Token,
                        StartDate,
                        EndDate,
                        Report,
                        Format}, this.getTransactionReportOperationCompleted, userState);
        }
        
        private void OngetTransactionReportOperationCompleted(object arg) {
            if ((this.getTransactionReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionReportCompleted(this, new getTransactionReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTransactionStatusReturn")]
        public TransactionResponse getTransactionStatus(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum) {
            object[] results = this.Invoke("getTransactionStatus", new object[] {
                        Token,
                        RefNum});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionStatusAsync(ueSecurityToken Token, string RefNum) {
            this.getTransactionStatusAsync(Token, RefNum, null);
        }
        
        /// <remarks/>
        public void getTransactionStatusAsync(ueSecurityToken Token, string RefNum, object userState) {
            if ((this.getTransactionStatusOperationCompleted == null)) {
                this.getTransactionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionStatusOperationCompleted);
            }
            this.InvokeAsync("getTransactionStatus", new object[] {
                        Token,
                        RefNum}, this.getTransactionStatusOperationCompleted, userState);
        }
        
        private void OngetTransactionStatusOperationCompleted(object arg) {
            if ((this.getTransactionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionStatusCompleted(this, new getTransactionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("moveCustomerReturn", DataType="integer")]
        public string moveCustomer(ueSecurityToken MoveFromToken, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, ueSecurityToken MoveToToken) {
            object[] results = this.Invoke("moveCustomer", new object[] {
                        MoveFromToken,
                        CustNum,
                        MoveToToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void moveCustomerAsync(ueSecurityToken MoveFromToken, string CustNum, ueSecurityToken MoveToToken) {
            this.moveCustomerAsync(MoveFromToken, CustNum, MoveToToken, null);
        }
        
        /// <remarks/>
        public void moveCustomerAsync(ueSecurityToken MoveFromToken, string CustNum, ueSecurityToken MoveToToken, object userState) {
            if ((this.moveCustomerOperationCompleted == null)) {
                this.moveCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveCustomerOperationCompleted);
            }
            this.InvokeAsync("moveCustomer", new object[] {
                        MoveFromToken,
                        CustNum,
                        MoveToToken}, this.moveCustomerOperationCompleted, userState);
        }
        
        private void OnmoveCustomerOperationCompleted(object arg) {
            if ((this.moveCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveCustomerCompleted(this, new moveCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("lookupCardTokenReturn")]
        public CreditCardToken lookupCardToken(ueSecurityToken Token, string Lookup) {
            object[] results = this.Invoke("lookupCardToken", new object[] {
                        Token,
                        Lookup});
            return ((CreditCardToken)(results[0]));
        }
        
        /// <remarks/>
        public void lookupCardTokenAsync(ueSecurityToken Token, string Lookup) {
            this.lookupCardTokenAsync(Token, Lookup, null);
        }
        
        /// <remarks/>
        public void lookupCardTokenAsync(ueSecurityToken Token, string Lookup, object userState) {
            if ((this.lookupCardTokenOperationCompleted == null)) {
                this.lookupCardTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlookupCardTokenOperationCompleted);
            }
            this.InvokeAsync("lookupCardToken", new object[] {
                        Token,
                        Lookup}, this.lookupCardTokenOperationCompleted, userState);
        }
        
        private void OnlookupCardTokenOperationCompleted(object arg) {
            if ((this.lookupCardTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lookupCardTokenCompleted(this, new lookupCardTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("pauseBatchUploadReturn")]
        public bool pauseBatchUpload(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string UploadRefNum) {
            object[] results = this.Invoke("pauseBatchUpload", new object[] {
                        Token,
                        UploadRefNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void pauseBatchUploadAsync(ueSecurityToken Token, string UploadRefNum) {
            this.pauseBatchUploadAsync(Token, UploadRefNum, null);
        }
        
        /// <remarks/>
        public void pauseBatchUploadAsync(ueSecurityToken Token, string UploadRefNum, object userState) {
            if ((this.pauseBatchUploadOperationCompleted == null)) {
                this.pauseBatchUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpauseBatchUploadOperationCompleted);
            }
            this.InvokeAsync("pauseBatchUpload", new object[] {
                        Token,
                        UploadRefNum}, this.pauseBatchUploadOperationCompleted, userState);
        }
        
        private void OnpauseBatchUploadOperationCompleted(object arg) {
            if ((this.pauseBatchUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pauseBatchUploadCompleted(this, new pauseBatchUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("postAuthReturn")]
        public TransactionResponse postAuth(ueSecurityToken Token, TransactionRequestObject Params) {
            object[] results = this.Invoke("postAuth", new object[] {
                        Token,
                        Params});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void postAuthAsync(ueSecurityToken Token, TransactionRequestObject Params) {
            this.postAuthAsync(Token, Params, null);
        }
        
        /// <remarks/>
        public void postAuthAsync(ueSecurityToken Token, TransactionRequestObject Params, object userState) {
            if ((this.postAuthOperationCompleted == null)) {
                this.postAuthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpostAuthOperationCompleted);
            }
            this.InvokeAsync("postAuth", new object[] {
                        Token,
                        Params}, this.postAuthOperationCompleted, userState);
        }
        
        private void OnpostAuthOperationCompleted(object arg) {
            if ((this.postAuthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.postAuthCompleted(this, new postAuthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("quickUpdateCustomerReturn")]
        public bool quickUpdateCustomer(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, FieldValue[] UpdateData) {
            object[] results = this.Invoke("quickUpdateCustomer", new object[] {
                        Token,
                        CustNum,
                        UpdateData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void quickUpdateCustomerAsync(ueSecurityToken Token, string CustNum, FieldValue[] UpdateData) {
            this.quickUpdateCustomerAsync(Token, CustNum, UpdateData, null);
        }
        
        /// <remarks/>
        public void quickUpdateCustomerAsync(ueSecurityToken Token, string CustNum, FieldValue[] UpdateData, object userState) {
            if ((this.quickUpdateCustomerOperationCompleted == null)) {
                this.quickUpdateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnquickUpdateCustomerOperationCompleted);
            }
            this.InvokeAsync("quickUpdateCustomer", new object[] {
                        Token,
                        CustNum,
                        UpdateData}, this.quickUpdateCustomerOperationCompleted, userState);
        }
        
        private void OnquickUpdateCustomerOperationCompleted(object arg) {
            if ((this.quickUpdateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.quickUpdateCustomerCompleted(this, new quickUpdateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("quickUpdateProductReturn")]
        public bool quickUpdateProduct(ueSecurityToken Token, string ProductRefNum, FieldValue[] UpdateData) {
            object[] results = this.Invoke("quickUpdateProduct", new object[] {
                        Token,
                        ProductRefNum,
                        UpdateData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void quickUpdateProductAsync(ueSecurityToken Token, string ProductRefNum, FieldValue[] UpdateData) {
            this.quickUpdateProductAsync(Token, ProductRefNum, UpdateData, null);
        }
        
        /// <remarks/>
        public void quickUpdateProductAsync(ueSecurityToken Token, string ProductRefNum, FieldValue[] UpdateData, object userState) {
            if ((this.quickUpdateProductOperationCompleted == null)) {
                this.quickUpdateProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnquickUpdateProductOperationCompleted);
            }
            this.InvokeAsync("quickUpdateProduct", new object[] {
                        Token,
                        ProductRefNum,
                        UpdateData}, this.quickUpdateProductOperationCompleted, userState);
        }
        
        private void OnquickUpdateProductOperationCompleted(object arg) {
            if ((this.quickUpdateProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.quickUpdateProductCompleted(this, new quickUpdateProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("refundTransactionReturn")]
        public TransactionResponse refundTransaction(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, double Amount) {
            object[] results = this.Invoke("refundTransaction", new object[] {
                        Token,
                        RefNum,
                        Amount});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void refundTransactionAsync(ueSecurityToken Token, string RefNum, double Amount) {
            this.refundTransactionAsync(Token, RefNum, Amount, null);
        }
        
        /// <remarks/>
        public void refundTransactionAsync(ueSecurityToken Token, string RefNum, double Amount, object userState) {
            if ((this.refundTransactionOperationCompleted == null)) {
                this.refundTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrefundTransactionOperationCompleted);
            }
            this.InvokeAsync("refundTransaction", new object[] {
                        Token,
                        RefNum,
                        Amount}, this.refundTransactionOperationCompleted, userState);
        }
        
        private void OnrefundTransactionOperationCompleted(object arg) {
            if ((this.refundTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.refundTransactionCompleted(this, new refundTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("renderReceiptReturn")]
        public string renderReceipt(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string ReceiptRefNum, string ContentType) {
            object[] results = this.Invoke("renderReceipt", new object[] {
                        Token,
                        RefNum,
                        ReceiptRefNum,
                        ContentType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void renderReceiptAsync(ueSecurityToken Token, string RefNum, string ReceiptRefNum, string ContentType) {
            this.renderReceiptAsync(Token, RefNum, ReceiptRefNum, ContentType, null);
        }
        
        /// <remarks/>
        public void renderReceiptAsync(ueSecurityToken Token, string RefNum, string ReceiptRefNum, string ContentType, object userState) {
            if ((this.renderReceiptOperationCompleted == null)) {
                this.renderReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrenderReceiptOperationCompleted);
            }
            this.InvokeAsync("renderReceipt", new object[] {
                        Token,
                        RefNum,
                        ReceiptRefNum,
                        ContentType}, this.renderReceiptOperationCompleted, userState);
        }
        
        private void OnrenderReceiptOperationCompleted(object arg) {
            if ((this.renderReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.renderReceiptCompleted(this, new renderReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("renderReceiptByNameReturn")]
        public string renderReceiptByName(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, string ReceiptName, string ContentType) {
            object[] results = this.Invoke("renderReceiptByName", new object[] {
                        Token,
                        RefNum,
                        ReceiptName,
                        ContentType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void renderReceiptByNameAsync(ueSecurityToken Token, string RefNum, string ReceiptName, string ContentType) {
            this.renderReceiptByNameAsync(Token, RefNum, ReceiptName, ContentType, null);
        }
        
        /// <remarks/>
        public void renderReceiptByNameAsync(ueSecurityToken Token, string RefNum, string ReceiptName, string ContentType, object userState) {
            if ((this.renderReceiptByNameOperationCompleted == null)) {
                this.renderReceiptByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrenderReceiptByNameOperationCompleted);
            }
            this.InvokeAsync("renderReceiptByName", new object[] {
                        Token,
                        RefNum,
                        ReceiptName,
                        ContentType}, this.renderReceiptByNameOperationCompleted, userState);
        }
        
        private void OnrenderReceiptByNameOperationCompleted(object arg) {
            if ((this.renderReceiptByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.renderReceiptByNameCompleted(this, new renderReceiptByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runBatchUploadReturn")]
        public bool runBatchUpload(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string UploadRefNum) {
            object[] results = this.Invoke("runBatchUpload", new object[] {
                        Token,
                        UploadRefNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void runBatchUploadAsync(ueSecurityToken Token, string UploadRefNum) {
            this.runBatchUploadAsync(Token, UploadRefNum, null);
        }
        
        /// <remarks/>
        public void runBatchUploadAsync(ueSecurityToken Token, string UploadRefNum, object userState) {
            if ((this.runBatchUploadOperationCompleted == null)) {
                this.runBatchUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunBatchUploadOperationCompleted);
            }
            this.InvokeAsync("runBatchUpload", new object[] {
                        Token,
                        UploadRefNum}, this.runBatchUploadOperationCompleted, userState);
        }
        
        private void OnrunBatchUploadOperationCompleted(object arg) {
            if ((this.runBatchUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runBatchUploadCompleted(this, new runBatchUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runCreditReturn")]
        public TransactionResponse runCredit(ueSecurityToken Token, TransactionRequestObject Params) {
            object[] results = this.Invoke("runCredit", new object[] {
                        Token,
                        Params});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void runCreditAsync(ueSecurityToken Token, TransactionRequestObject Params) {
            this.runCreditAsync(Token, Params, null);
        }
        
        /// <remarks/>
        public void runCreditAsync(ueSecurityToken Token, TransactionRequestObject Params, object userState) {
            if ((this.runCreditOperationCompleted == null)) {
                this.runCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunCreditOperationCompleted);
            }
            this.InvokeAsync("runCredit", new object[] {
                        Token,
                        Params}, this.runCreditOperationCompleted, userState);
        }
        
        private void OnrunCreditOperationCompleted(object arg) {
            if ((this.runCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runCreditCompleted(this, new runCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runCheckCreditReturn")]
        public TransactionResponse runCheckCredit(ueSecurityToken Token, TransactionRequestObject Params) {
            object[] results = this.Invoke("runCheckCredit", new object[] {
                        Token,
                        Params});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void runCheckCreditAsync(ueSecurityToken Token, TransactionRequestObject Params) {
            this.runCheckCreditAsync(Token, Params, null);
        }
        
        /// <remarks/>
        public void runCheckCreditAsync(ueSecurityToken Token, TransactionRequestObject Params, object userState) {
            if ((this.runCheckCreditOperationCompleted == null)) {
                this.runCheckCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunCheckCreditOperationCompleted);
            }
            this.InvokeAsync("runCheckCredit", new object[] {
                        Token,
                        Params}, this.runCheckCreditOperationCompleted, userState);
        }
        
        private void OnrunCheckCreditOperationCompleted(object arg) {
            if ((this.runCheckCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runCheckCreditCompleted(this, new runCheckCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runCustomerTransactionReturn")]
        public TransactionResponse runCustomerTransaction(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string PaymentMethodID, CustomerTransactionRequest Parameters) {
            object[] results = this.Invoke("runCustomerTransaction", new object[] {
                        Token,
                        CustNum,
                        PaymentMethodID,
                        Parameters});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void runCustomerTransactionAsync(ueSecurityToken Token, string CustNum, string PaymentMethodID, CustomerTransactionRequest Parameters) {
            this.runCustomerTransactionAsync(Token, CustNum, PaymentMethodID, Parameters, null);
        }
        
        /// <remarks/>
        public void runCustomerTransactionAsync(ueSecurityToken Token, string CustNum, string PaymentMethodID, CustomerTransactionRequest Parameters, object userState) {
            if ((this.runCustomerTransactionOperationCompleted == null)) {
                this.runCustomerTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunCustomerTransactionOperationCompleted);
            }
            this.InvokeAsync("runCustomerTransaction", new object[] {
                        Token,
                        CustNum,
                        PaymentMethodID,
                        Parameters}, this.runCustomerTransactionOperationCompleted, userState);
        }
        
        private void OnrunCustomerTransactionOperationCompleted(object arg) {
            if ((this.runCustomerTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runCustomerTransactionCompleted(this, new runCustomerTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runQuickSaleReturn")]
        public TransactionResponse runQuickSale(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, TransactionDetail Details, bool AuthOnly) {
            object[] results = this.Invoke("runQuickSale", new object[] {
                        Token,
                        RefNum,
                        Details,
                        AuthOnly});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void runQuickSaleAsync(ueSecurityToken Token, string RefNum, TransactionDetail Details, bool AuthOnly) {
            this.runQuickSaleAsync(Token, RefNum, Details, AuthOnly, null);
        }
        
        /// <remarks/>
        public void runQuickSaleAsync(ueSecurityToken Token, string RefNum, TransactionDetail Details, bool AuthOnly, object userState) {
            if ((this.runQuickSaleOperationCompleted == null)) {
                this.runQuickSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunQuickSaleOperationCompleted);
            }
            this.InvokeAsync("runQuickSale", new object[] {
                        Token,
                        RefNum,
                        Details,
                        AuthOnly}, this.runQuickSaleOperationCompleted, userState);
        }
        
        private void OnrunQuickSaleOperationCompleted(object arg) {
            if ((this.runQuickSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runQuickSaleCompleted(this, new runQuickSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runQuickCreditReturn")]
        public TransactionResponse runQuickCredit(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, TransactionDetail Details) {
            object[] results = this.Invoke("runQuickCredit", new object[] {
                        Token,
                        RefNum,
                        Details});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void runQuickCreditAsync(ueSecurityToken Token, string RefNum, TransactionDetail Details) {
            this.runQuickCreditAsync(Token, RefNum, Details, null);
        }
        
        /// <remarks/>
        public void runQuickCreditAsync(ueSecurityToken Token, string RefNum, TransactionDetail Details, object userState) {
            if ((this.runQuickCreditOperationCompleted == null)) {
                this.runQuickCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunQuickCreditOperationCompleted);
            }
            this.InvokeAsync("runQuickCredit", new object[] {
                        Token,
                        RefNum,
                        Details}, this.runQuickCreditOperationCompleted, userState);
        }
        
        private void OnrunQuickCreditOperationCompleted(object arg) {
            if ((this.runQuickCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runQuickCreditCompleted(this, new runQuickCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runAuthOnlyReturn")]
        public TransactionResponse runAuthOnly(ueSecurityToken Token, TransactionRequestObject Params) {
            object[] results = this.Invoke("runAuthOnly", new object[] {
                        Token,
                        Params});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void runAuthOnlyAsync(ueSecurityToken Token, TransactionRequestObject Params) {
            this.runAuthOnlyAsync(Token, Params, null);
        }
        
        /// <remarks/>
        public void runAuthOnlyAsync(ueSecurityToken Token, TransactionRequestObject Params, object userState) {
            if ((this.runAuthOnlyOperationCompleted == null)) {
                this.runAuthOnlyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunAuthOnlyOperationCompleted);
            }
            this.InvokeAsync("runAuthOnly", new object[] {
                        Token,
                        Params}, this.runAuthOnlyOperationCompleted, userState);
        }
        
        private void OnrunAuthOnlyOperationCompleted(object arg) {
            if ((this.runAuthOnlyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runAuthOnlyCompleted(this, new runAuthOnlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runSaleReturn")]
        public TransactionResponse runSale(ueSecurityToken Token, TransactionRequestObject Params) {
            object[] results = this.Invoke("runSale", new object[] {
                        Token,
                        Params});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void runSaleAsync(ueSecurityToken Token, TransactionRequestObject Params) {
            this.runSaleAsync(Token, Params, null);
        }
        
        /// <remarks/>
        public void runSaleAsync(ueSecurityToken Token, TransactionRequestObject Params, object userState) {
            if ((this.runSaleOperationCompleted == null)) {
                this.runSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunSaleOperationCompleted);
            }
            this.InvokeAsync("runSale", new object[] {
                        Token,
                        Params}, this.runSaleOperationCompleted, userState);
        }
        
        private void OnrunSaleOperationCompleted(object arg) {
            if ((this.runSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runSaleCompleted(this, new runSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runCheckSaleReturn")]
        public TransactionResponse runCheckSale(ueSecurityToken Token, TransactionRequestObject Params) {
            object[] results = this.Invoke("runCheckSale", new object[] {
                        Token,
                        Params});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void runCheckSaleAsync(ueSecurityToken Token, TransactionRequestObject Params) {
            this.runCheckSaleAsync(Token, Params, null);
        }
        
        /// <remarks/>
        public void runCheckSaleAsync(ueSecurityToken Token, TransactionRequestObject Params, object userState) {
            if ((this.runCheckSaleOperationCompleted == null)) {
                this.runCheckSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunCheckSaleOperationCompleted);
            }
            this.InvokeAsync("runCheckSale", new object[] {
                        Token,
                        Params}, this.runCheckSaleOperationCompleted, userState);
        }
        
        private void OnrunCheckSaleOperationCompleted(object arg) {
            if ((this.runCheckSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runCheckSaleCompleted(this, new runCheckSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runTransactionReturn")]
        public TransactionResponse runTransaction(ueSecurityToken Token, TransactionRequestObject Parameters) {
            object[] results = this.Invoke("runTransaction", new object[] {
                        Token,
                        Parameters});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void runTransactionAsync(ueSecurityToken Token, TransactionRequestObject Parameters) {
            this.runTransactionAsync(Token, Parameters, null);
        }
        
        /// <remarks/>
        public void runTransactionAsync(ueSecurityToken Token, TransactionRequestObject Parameters, object userState) {
            if ((this.runTransactionOperationCompleted == null)) {
                this.runTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunTransactionOperationCompleted);
            }
            this.InvokeAsync("runTransaction", new object[] {
                        Token,
                        Parameters}, this.runTransactionOperationCompleted, userState);
        }
        
        private void OnrunTransactionOperationCompleted(object arg) {
            if ((this.runTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runTransactionCompleted(this, new runTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("runTransactionAPIReturn")]
        public TransactionResponse runTransactionAPI(ueSecurityToken Token, FieldValue[] Parameters) {
            object[] results = this.Invoke("runTransactionAPI", new object[] {
                        Token,
                        Parameters});
            return ((TransactionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void runTransactionAPIAsync(ueSecurityToken Token, FieldValue[] Parameters) {
            this.runTransactionAPIAsync(Token, Parameters, null);
        }
        
        /// <remarks/>
        public void runTransactionAPIAsync(ueSecurityToken Token, FieldValue[] Parameters, object userState) {
            if ((this.runTransactionAPIOperationCompleted == null)) {
                this.runTransactionAPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunTransactionAPIOperationCompleted);
            }
            this.InvokeAsync("runTransactionAPI", new object[] {
                        Token,
                        Parameters}, this.runTransactionAPIOperationCompleted, userState);
        }
        
        private void OnrunTransactionAPIOperationCompleted(object arg) {
            if ((this.runTransactionAPICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runTransactionAPICompleted(this, new runTransactionAPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("saveCardReturn")]
        public CreditCardToken saveCard(ueSecurityToken Token, CreditCardData CreditCardData) {
            object[] results = this.Invoke("saveCard", new object[] {
                        Token,
                        CreditCardData});
            return ((CreditCardToken)(results[0]));
        }
        
        /// <remarks/>
        public void saveCardAsync(ueSecurityToken Token, CreditCardData CreditCardData) {
            this.saveCardAsync(Token, CreditCardData, null);
        }
        
        /// <remarks/>
        public void saveCardAsync(ueSecurityToken Token, CreditCardData CreditCardData, object userState) {
            if ((this.saveCardOperationCompleted == null)) {
                this.saveCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveCardOperationCompleted);
            }
            this.InvokeAsync("saveCard", new object[] {
                        Token,
                        CreditCardData}, this.saveCardOperationCompleted, userState);
        }
        
        private void OnsaveCardOperationCompleted(object arg) {
            if ((this.saveCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveCardCompleted(this, new saveCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("saveCardsReturn")]
        public CreditCardToken[] saveCards(ueSecurityToken Token, CreditCardData[] CreditCards) {
            object[] results = this.Invoke("saveCards", new object[] {
                        Token,
                        CreditCards});
            return ((CreditCardToken[])(results[0]));
        }
        
        /// <remarks/>
        public void saveCardsAsync(ueSecurityToken Token, CreditCardData[] CreditCards) {
            this.saveCardsAsync(Token, CreditCards, null);
        }
        
        /// <remarks/>
        public void saveCardsAsync(ueSecurityToken Token, CreditCardData[] CreditCards, object userState) {
            if ((this.saveCardsOperationCompleted == null)) {
                this.saveCardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveCardsOperationCompleted);
            }
            this.InvokeAsync("saveCards", new object[] {
                        Token,
                        CreditCards}, this.saveCardsOperationCompleted, userState);
        }
        
        private void OnsaveCardsOperationCompleted(object arg) {
            if ((this.saveCardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveCardsCompleted(this, new saveCardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchBatchesReturn")]
        public BatchSearchResult searchBatches(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchBatches", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((BatchSearchResult)(results[0]));
        }
        
        /// <remarks/>
        public void searchBatchesAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchBatchesAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// <remarks/>
        public void searchBatchesAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchBatchesOperationCompleted == null)) {
                this.searchBatchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchBatchesOperationCompleted);
            }
            this.InvokeAsync("searchBatches", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchBatchesOperationCompleted, userState);
        }
        
        private void OnsearchBatchesOperationCompleted(object arg) {
            if ((this.searchBatchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchBatchesCompleted(this, new searchBatchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchBatchesCountReturn")]
        public BatchSearchResult searchBatchesCount(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchBatchesCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((BatchSearchResult)(results[0]));
        }
        
        /// <remarks/>
        public void searchBatchesCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchBatchesCountAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// <remarks/>
        public void searchBatchesCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchBatchesCountOperationCompleted == null)) {
                this.searchBatchesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchBatchesCountOperationCompleted);
            }
            this.InvokeAsync("searchBatchesCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchBatchesCountOperationCompleted, userState);
        }
        
        private void OnsearchBatchesCountOperationCompleted(object arg) {
            if ((this.searchBatchesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchBatchesCountCompleted(this, new searchBatchesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchCustomerIDReturn", DataType="integer")]
        public string searchCustomerID(ueSecurityToken Token, string CustID) {
            object[] results = this.Invoke("searchCustomerID", new object[] {
                        Token,
                        CustID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void searchCustomerIDAsync(ueSecurityToken Token, string CustID) {
            this.searchCustomerIDAsync(Token, CustID, null);
        }
        
        /// <remarks/>
        public void searchCustomerIDAsync(ueSecurityToken Token, string CustID, object userState) {
            if ((this.searchCustomerIDOperationCompleted == null)) {
                this.searchCustomerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchCustomerIDOperationCompleted);
            }
            this.InvokeAsync("searchCustomerID", new object[] {
                        Token,
                        CustID}, this.searchCustomerIDOperationCompleted, userState);
        }
        
        private void OnsearchCustomerIDOperationCompleted(object arg) {
            if ((this.searchCustomerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCustomerIDCompleted(this, new searchCustomerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchCustomersReturn")]
        public CustomerSearchResult searchCustomers(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchCustomers", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((CustomerSearchResult)(results[0]));
        }
        
        /// <remarks/>
        public void searchCustomersAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchCustomersAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// <remarks/>
        public void searchCustomersAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchCustomersOperationCompleted == null)) {
                this.searchCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchCustomersOperationCompleted);
            }
            this.InvokeAsync("searchCustomers", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchCustomersOperationCompleted, userState);
        }
        
        private void OnsearchCustomersOperationCompleted(object arg) {
            if ((this.searchCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCustomersCompleted(this, new searchCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchCustomersCountReturn")]
        public CustomerSearchResult searchCustomersCount(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchCustomersCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((CustomerSearchResult)(results[0]));
        }
        
        /// <remarks/>
        public void searchCustomersCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchCustomersCountAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// <remarks/>
        public void searchCustomersCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchCustomersCountOperationCompleted == null)) {
                this.searchCustomersCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchCustomersCountOperationCompleted);
            }
            this.InvokeAsync("searchCustomersCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchCustomersCountOperationCompleted, userState);
        }
        
        private void OnsearchCustomersCountOperationCompleted(object arg) {
            if ((this.searchCustomersCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCustomersCountCompleted(this, new searchCustomersCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchProductsReturn")]
        public ProductSearchResult searchProducts(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchProducts", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((ProductSearchResult)(results[0]));
        }
        
        /// <remarks/>
        public void searchProductsAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchProductsAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// <remarks/>
        public void searchProductsAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchProductsOperationCompleted == null)) {
                this.searchProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchProductsOperationCompleted);
            }
            this.InvokeAsync("searchProducts", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchProductsOperationCompleted, userState);
        }
        
        private void OnsearchProductsOperationCompleted(object arg) {
            if ((this.searchProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchProductsCompleted(this, new searchProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchProductsCountReturn")]
        public ProductSearchResult searchProductsCount(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchProductsCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((ProductSearchResult)(results[0]));
        }
        
        /// <remarks/>
        public void searchProductsCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchProductsCountAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// <remarks/>
        public void searchProductsCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchProductsCountOperationCompleted == null)) {
                this.searchProductsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchProductsCountOperationCompleted);
            }
            this.InvokeAsync("searchProductsCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchProductsCountOperationCompleted, userState);
        }
        
        private void OnsearchProductsCountOperationCompleted(object arg) {
            if ((this.searchProductsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchProductsCountCompleted(this, new searchProductsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchProductsCustomReturn")]
        public string searchProductsCustom(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string[] FieldList, string Format, string Sort) {
            object[] results = this.Invoke("searchProductsCustom", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        FieldList,
                        Format,
                        Sort});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void searchProductsCustomAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string[] FieldList, string Format, string Sort) {
            this.searchProductsCustomAsync(Token, Search, MatchAll, Start, Limit, FieldList, Format, Sort, null);
        }
        
        /// <remarks/>
        public void searchProductsCustomAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string[] FieldList, string Format, string Sort, object userState) {
            if ((this.searchProductsCustomOperationCompleted == null)) {
                this.searchProductsCustomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchProductsCustomOperationCompleted);
            }
            this.InvokeAsync("searchProductsCustom", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        FieldList,
                        Format,
                        Sort}, this.searchProductsCustomOperationCompleted, userState);
        }
        
        private void OnsearchProductsCustomOperationCompleted(object arg) {
            if ((this.searchProductsCustomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchProductsCustomCompleted(this, new searchProductsCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchTransactionsReturn")]
        public TransactionSearchResult searchTransactions(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchTransactions", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((TransactionSearchResult)(results[0]));
        }
        
        /// <remarks/>
        public void searchTransactionsAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchTransactionsAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// <remarks/>
        public void searchTransactionsAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchTransactionsOperationCompleted == null)) {
                this.searchTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchTransactionsOperationCompleted);
            }
            this.InvokeAsync("searchTransactions", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchTransactionsOperationCompleted, userState);
        }
        
        private void OnsearchTransactionsOperationCompleted(object arg) {
            if ((this.searchTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchTransactionsCompleted(this, new searchTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchTransactionsCountReturn")]
        public TransactionSearchResult searchTransactionsCount(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string Sort) {
            object[] results = this.Invoke("searchTransactionsCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort});
            return ((TransactionSearchResult)(results[0]));
        }
        
        /// <remarks/>
        public void searchTransactionsCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort) {
            this.searchTransactionsCountAsync(Token, Search, MatchAll, Start, Limit, Sort, null);
        }
        
        /// <remarks/>
        public void searchTransactionsCountAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string Sort, object userState) {
            if ((this.searchTransactionsCountOperationCompleted == null)) {
                this.searchTransactionsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchTransactionsCountOperationCompleted);
            }
            this.InvokeAsync("searchTransactionsCount", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        Sort}, this.searchTransactionsCountOperationCompleted, userState);
        }
        
        private void OnsearchTransactionsCountOperationCompleted(object arg) {
            if ((this.searchTransactionsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchTransactionsCountCompleted(this, new searchTransactionsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchTransactionsCustomReturn")]
        public string searchTransactionsCustom(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string[] FieldList, string Format, string Sort) {
            object[] results = this.Invoke("searchTransactionsCustom", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        FieldList,
                        Format,
                        Sort});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void searchTransactionsCustomAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string[] FieldList, string Format, string Sort) {
            this.searchTransactionsCustomAsync(Token, Search, MatchAll, Start, Limit, FieldList, Format, Sort, null);
        }
        
        /// <remarks/>
        public void searchTransactionsCustomAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string[] FieldList, string Format, string Sort, object userState) {
            if ((this.searchTransactionsCustomOperationCompleted == null)) {
                this.searchTransactionsCustomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchTransactionsCustomOperationCompleted);
            }
            this.InvokeAsync("searchTransactionsCustom", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        FieldList,
                        Format,
                        Sort}, this.searchTransactionsCustomOperationCompleted, userState);
        }
        
        private void OnsearchTransactionsCustomOperationCompleted(object arg) {
            if ((this.searchTransactionsCustomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchTransactionsCustomCompleted(this, new searchTransactionsCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("searchCustomersCustomReturn")]
        public string searchCustomersCustom(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Start, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string Limit, string[] FieldList, string Format, string Sort) {
            object[] results = this.Invoke("searchCustomersCustom", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        FieldList,
                        Format,
                        Sort});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void searchCustomersCustomAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string[] FieldList, string Format, string Sort) {
            this.searchCustomersCustomAsync(Token, Search, MatchAll, Start, Limit, FieldList, Format, Sort, null);
        }
        
        /// <remarks/>
        public void searchCustomersCustomAsync(ueSecurityToken Token, SearchParam[] Search, bool MatchAll, string Start, string Limit, string[] FieldList, string Format, string Sort, object userState) {
            if ((this.searchCustomersCustomOperationCompleted == null)) {
                this.searchCustomersCustomOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchCustomersCustomOperationCompleted);
            }
            this.InvokeAsync("searchCustomersCustom", new object[] {
                        Token,
                        Search,
                        MatchAll,
                        Start,
                        Limit,
                        FieldList,
                        Format,
                        Sort}, this.searchCustomersCustomOperationCompleted, userState);
        }
        
        private void OnsearchCustomersCustomOperationCompleted(object arg) {
            if ((this.searchCustomersCustomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCustomersCustomCompleted(this, new searchCustomersCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("setDefaultPaymentMethodReturn")]
        public bool setDefaultPaymentMethod(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string MethodID) {
            object[] results = this.Invoke("setDefaultPaymentMethod", new object[] {
                        Token,
                        CustNum,
                        MethodID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setDefaultPaymentMethodAsync(ueSecurityToken Token, string CustNum, string MethodID) {
            this.setDefaultPaymentMethodAsync(Token, CustNum, MethodID, null);
        }
        
        /// <remarks/>
        public void setDefaultPaymentMethodAsync(ueSecurityToken Token, string CustNum, string MethodID, object userState) {
            if ((this.setDefaultPaymentMethodOperationCompleted == null)) {
                this.setDefaultPaymentMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDefaultPaymentMethodOperationCompleted);
            }
            this.InvokeAsync("setDefaultPaymentMethod", new object[] {
                        Token,
                        CustNum,
                        MethodID}, this.setDefaultPaymentMethodOperationCompleted, userState);
        }
        
        private void OnsetDefaultPaymentMethodOperationCompleted(object arg) {
            if ((this.setDefaultPaymentMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setDefaultPaymentMethodCompleted(this, new setDefaultPaymentMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateCustomerReturn")]
        public bool updateCustomer(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string CustNum, CustomerObject CustomerData) {
            object[] results = this.Invoke("updateCustomer", new object[] {
                        Token,
                        CustNum,
                        CustomerData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateCustomerAsync(ueSecurityToken Token, string CustNum, CustomerObject CustomerData) {
            this.updateCustomerAsync(Token, CustNum, CustomerData, null);
        }
        
        /// <remarks/>
        public void updateCustomerAsync(ueSecurityToken Token, string CustNum, CustomerObject CustomerData, object userState) {
            if ((this.updateCustomerOperationCompleted == null)) {
                this.updateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCustomerOperationCompleted);
            }
            this.InvokeAsync("updateCustomer", new object[] {
                        Token,
                        CustNum,
                        CustomerData}, this.updateCustomerOperationCompleted, userState);
        }
        
        private void OnupdateCustomerOperationCompleted(object arg) {
            if ((this.updateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCustomerCompleted(this, new updateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateCustomerPaymentMethodReturn")]
        public bool updateCustomerPaymentMethod(ueSecurityToken Token, PaymentMethod PaymentMethod, bool Verify) {
            object[] results = this.Invoke("updateCustomerPaymentMethod", new object[] {
                        Token,
                        PaymentMethod,
                        Verify});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateCustomerPaymentMethodAsync(ueSecurityToken Token, PaymentMethod PaymentMethod, bool Verify) {
            this.updateCustomerPaymentMethodAsync(Token, PaymentMethod, Verify, null);
        }
        
        /// <remarks/>
        public void updateCustomerPaymentMethodAsync(ueSecurityToken Token, PaymentMethod PaymentMethod, bool Verify, object userState) {
            if ((this.updateCustomerPaymentMethodOperationCompleted == null)) {
                this.updateCustomerPaymentMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCustomerPaymentMethodOperationCompleted);
            }
            this.InvokeAsync("updateCustomerPaymentMethod", new object[] {
                        Token,
                        PaymentMethod,
                        Verify}, this.updateCustomerPaymentMethodOperationCompleted, userState);
        }
        
        private void OnupdateCustomerPaymentMethodOperationCompleted(object arg) {
            if ((this.updateCustomerPaymentMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCustomerPaymentMethodCompleted(this, new updateCustomerPaymentMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateProductReturn")]
        public bool updateProduct(ueSecurityToken Token, string ProductRefNum, Product Product) {
            object[] results = this.Invoke("updateProduct", new object[] {
                        Token,
                        ProductRefNum,
                        Product});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateProductAsync(ueSecurityToken Token, string ProductRefNum, Product Product) {
            this.updateProductAsync(Token, ProductRefNum, Product, null);
        }
        
        /// <remarks/>
        public void updateProductAsync(ueSecurityToken Token, string ProductRefNum, Product Product, object userState) {
            if ((this.updateProductOperationCompleted == null)) {
                this.updateProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateProductOperationCompleted);
            }
            this.InvokeAsync("updateProduct", new object[] {
                        Token,
                        ProductRefNum,
                        Product}, this.updateProductOperationCompleted, userState);
        }
        
        private void OnupdateProductOperationCompleted(object arg) {
            if ((this.updateProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateProductCompleted(this, new updateProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateProductCategoryReturn")]
        public bool updateProductCategory(ueSecurityToken Token, string ProductCategoryRefNum, ProductCategory ProductCategory) {
            object[] results = this.Invoke("updateProductCategory", new object[] {
                        Token,
                        ProductCategoryRefNum,
                        ProductCategory});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateProductCategoryAsync(ueSecurityToken Token, string ProductCategoryRefNum, ProductCategory ProductCategory) {
            this.updateProductCategoryAsync(Token, ProductCategoryRefNum, ProductCategory, null);
        }
        
        /// <remarks/>
        public void updateProductCategoryAsync(ueSecurityToken Token, string ProductCategoryRefNum, ProductCategory ProductCategory, object userState) {
            if ((this.updateProductCategoryOperationCompleted == null)) {
                this.updateProductCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateProductCategoryOperationCompleted);
            }
            this.InvokeAsync("updateProductCategory", new object[] {
                        Token,
                        ProductCategoryRefNum,
                        ProductCategory}, this.updateProductCategoryOperationCompleted, userState);
        }
        
        private void OnupdateProductCategoryOperationCompleted(object arg) {
            if ((this.updateProductCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateProductCategoryCompleted(this, new updateProductCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("updateReceiptResponseReturn", DataType="integer")]
        public string updateReceipt(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string ReceiptRefNum, Receipt Receipt) {
            object[] results = this.Invoke("updateReceipt", new object[] {
                        Token,
                        ReceiptRefNum,
                        Receipt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateReceiptAsync(ueSecurityToken Token, string ReceiptRefNum, Receipt Receipt) {
            this.updateReceiptAsync(Token, ReceiptRefNum, Receipt, null);
        }
        
        /// <remarks/>
        public void updateReceiptAsync(ueSecurityToken Token, string ReceiptRefNum, Receipt Receipt, object userState) {
            if ((this.updateReceiptOperationCompleted == null)) {
                this.updateReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateReceiptOperationCompleted);
            }
            this.InvokeAsync("updateReceipt", new object[] {
                        Token,
                        ReceiptRefNum,
                        Receipt}, this.updateReceiptOperationCompleted, userState);
        }
        
        private void OnupdateReceiptOperationCompleted(object arg) {
            if ((this.updateReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateReceiptCompleted(this, new updateReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("uploadProductFileReturn")]
        public bool uploadProductFile(ueSecurityToken Token, string ExistingProducts, string DefaultCategory, string DefaultWarehouse, string Columns, string Data) {
            object[] results = this.Invoke("uploadProductFile", new object[] {
                        Token,
                        ExistingProducts,
                        DefaultCategory,
                        DefaultWarehouse,
                        Columns,
                        Data});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void uploadProductFileAsync(ueSecurityToken Token, string ExistingProducts, string DefaultCategory, string DefaultWarehouse, string Columns, string Data) {
            this.uploadProductFileAsync(Token, ExistingProducts, DefaultCategory, DefaultWarehouse, Columns, Data, null);
        }
        
        /// <remarks/>
        public void uploadProductFileAsync(ueSecurityToken Token, string ExistingProducts, string DefaultCategory, string DefaultWarehouse, string Columns, string Data, object userState) {
            if ((this.uploadProductFileOperationCompleted == null)) {
                this.uploadProductFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadProductFileOperationCompleted);
            }
            this.InvokeAsync("uploadProductFile", new object[] {
                        Token,
                        ExistingProducts,
                        DefaultCategory,
                        DefaultWarehouse,
                        Columns,
                        Data}, this.uploadProductFileOperationCompleted, userState);
        }
        
        private void OnuploadProductFileOperationCompleted(object arg) {
            if ((this.uploadProductFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadProductFileCompleted(this, new uploadProductFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("voidTransactionReturn")]
        public bool voidTransaction(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum) {
            object[] results = this.Invoke("voidTransaction", new object[] {
                        Token,
                        RefNum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void voidTransactionAsync(ueSecurityToken Token, string RefNum) {
            this.voidTransactionAsync(Token, RefNum, null);
        }
        
        /// <remarks/>
        public void voidTransactionAsync(ueSecurityToken Token, string RefNum, object userState) {
            if ((this.voidTransactionOperationCompleted == null)) {
                this.voidTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvoidTransactionOperationCompleted);
            }
            this.InvokeAsync("voidTransaction", new object[] {
                        Token,
                        RefNum}, this.voidTransactionOperationCompleted, userState);
        }
        
        private void OnvoidTransactionOperationCompleted(object arg) {
            if ((this.voidTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.voidTransactionCompleted(this, new voidTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ueSoapServerAction", RequestNamespace="urn:usaepay", ResponseNamespace="urn:usaepay")]
        [return: System.Xml.Serialization.SoapElementAttribute("overrideTransactionReturn")]
        public bool overrideTransaction(ueSecurityToken Token, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string RefNum, string Reason) {
            object[] results = this.Invoke("overrideTransaction", new object[] {
                        Token,
                        RefNum,
                        Reason});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void overrideTransactionAsync(ueSecurityToken Token, string RefNum, string Reason) {
            this.overrideTransactionAsync(Token, RefNum, Reason, null);
        }
        
        /// <remarks/>
        public void overrideTransactionAsync(ueSecurityToken Token, string RefNum, string Reason, object userState) {
            if ((this.overrideTransactionOperationCompleted == null)) {
                this.overrideTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnoverrideTransactionOperationCompleted);
            }
            this.InvokeAsync("overrideTransaction", new object[] {
                        Token,
                        RefNum,
                        Reason}, this.overrideTransactionOperationCompleted, userState);
        }
        
        private void OnoverrideTransactionOperationCompleted(object arg) {
            if ((this.overrideTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.overrideTransactionCompleted(this, new overrideTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class ueSecurityToken {
        
        private string clientIPField;
        
        private ueHash pinHashField;
        
        private string sourceKeyField;
        
        /// <remarks/>
        public string ClientIP {
            get {
                return this.clientIPField;
            }
            set {
                this.clientIPField = value;
            }
        }
        
        /// <remarks/>
        public ueHash PinHash {
            get {
                return this.pinHashField;
            }
            set {
                this.pinHashField = value;
            }
        }
        
        /// <remarks/>
        public string SourceKey {
            get {
                return this.sourceKeyField;
            }
            set {
                this.sourceKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class ueHash {
        
        private string hashValueField;
        
        private string seedField;
        
        private string typeField;
        
        /// <remarks/>
        public string HashValue {
            get {
                return this.hashValueField;
            }
            set {
                this.hashValueField = value;
            }
        }
        
        /// <remarks/>
        public string Seed {
            get {
                return this.seedField;
            }
            set {
                this.seedField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class ProductSearchResult {
        
        private Product[] productsField;
        
        private string productsMatchedField;
        
        private string productsReturnedField;
        
        private string limitField;
        
        private string startIndexField;
        
        /// <remarks/>
        public Product[] Products {
            get {
                return this.productsField;
            }
            set {
                this.productsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string ProductsMatched {
            get {
                return this.productsMatchedField;
            }
            set {
                this.productsMatchedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string ProductsReturned {
            get {
                return this.productsReturnedField;
            }
            set {
                this.productsReturnedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Limit {
            get {
                return this.limitField;
            }
            set {
                this.limitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string StartIndex {
            get {
                return this.startIndexField;
            }
            set {
                this.startIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class Product {
        
        private string productRefNumField;
        
        private string productIDField;
        
        private string sKUField;
        
        private string uPCField;
        
        private string categoryField;
        
        private bool enabledField;
        
        private bool enabledFieldSpecified;
        
        private string nameField;
        
        private string descriptionField;
        
        private string modelField;
        
        private double weightField;
        
        private bool weightFieldSpecified;
        
        private double shipWeightField;
        
        private bool shipWeightFieldSpecified;
        
        private double priceField;
        
        private double wholesalePriceField;
        
        private bool wholesalePriceFieldSpecified;
        
        private double listPriceField;
        
        private bool listPriceFieldSpecified;
        
        private string dateAvailableField;
        
        private string manufacturerField;
        
        private bool physicalGoodField;
        
        private bool physicalGoodFieldSpecified;
        
        private string taxClassField;
        
        private string minQuantityField;
        
        private string imageURLField;
        
        private string uRLField;
        
        private System.DateTime createdField;
        
        private bool createdFieldSpecified;
        
        private System.DateTime modifiedField;
        
        private bool modifiedFieldSpecified;
        
        private ProductInventory[] inventoryField;
        
        private PriceTier[] priceTiersField;
        
        /// <remarks/>
        public string ProductRefNum {
            get {
                return this.productRefNumField;
            }
            set {
                this.productRefNumField = value;
            }
        }
        
        /// <remarks/>
        public string ProductID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
            }
        }
        
        /// <remarks/>
        public string SKU {
            get {
                return this.sKUField;
            }
            set {
                this.sKUField = value;
            }
        }
        
        /// <remarks/>
        public string UPC {
            get {
                return this.uPCField;
            }
            set {
                this.uPCField = value;
            }
        }
        
        /// <remarks/>
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool EnabledSpecified {
            get {
                return this.enabledFieldSpecified;
            }
            set {
                this.enabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public double Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool WeightSpecified {
            get {
                return this.weightFieldSpecified;
            }
            set {
                this.weightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double ShipWeight {
            get {
                return this.shipWeightField;
            }
            set {
                this.shipWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool ShipWeightSpecified {
            get {
                return this.shipWeightFieldSpecified;
            }
            set {
                this.shipWeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public double WholesalePrice {
            get {
                return this.wholesalePriceField;
            }
            set {
                this.wholesalePriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool WholesalePriceSpecified {
            get {
                return this.wholesalePriceFieldSpecified;
            }
            set {
                this.wholesalePriceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double ListPrice {
            get {
                return this.listPriceField;
            }
            set {
                this.listPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool ListPriceSpecified {
            get {
                return this.listPriceFieldSpecified;
            }
            set {
                this.listPriceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string DateAvailable {
            get {
                return this.dateAvailableField;
            }
            set {
                this.dateAvailableField = value;
            }
        }
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public bool PhysicalGood {
            get {
                return this.physicalGoodField;
            }
            set {
                this.physicalGoodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool PhysicalGoodSpecified {
            get {
                return this.physicalGoodFieldSpecified;
            }
            set {
                this.physicalGoodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string TaxClass {
            get {
                return this.taxClassField;
            }
            set {
                this.taxClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string MinQuantity {
            get {
                return this.minQuantityField;
            }
            set {
                this.minQuantityField = value;
            }
        }
        
        /// <remarks/>
        public string ImageURL {
            get {
                return this.imageURLField;
            }
            set {
                this.imageURLField = value;
            }
        }
        
        /// <remarks/>
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool CreatedSpecified {
            get {
                return this.createdFieldSpecified;
            }
            set {
                this.createdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool ModifiedSpecified {
            get {
                return this.modifiedFieldSpecified;
            }
            set {
                this.modifiedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ProductInventory[] Inventory {
            get {
                return this.inventoryField;
            }
            set {
                this.inventoryField = value;
            }
        }
        
        /// <remarks/>
        public PriceTier[] PriceTiers {
            get {
                return this.priceTiersField;
            }
            set {
                this.priceTiersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class ProductInventory {
        
        private string inventoryLocationField;
        
        private string qtyOnHandField;
        
        private string qtyOnOrderField;
        
        private string dateAvailableField;
        
        /// <remarks/>
        public string InventoryLocation {
            get {
                return this.inventoryLocationField;
            }
            set {
                this.inventoryLocationField = value;
            }
        }
        
        /// <remarks/>
        public string QtyOnHand {
            get {
                return this.qtyOnHandField;
            }
            set {
                this.qtyOnHandField = value;
            }
        }
        
        /// <remarks/>
        public string QtyOnOrder {
            get {
                return this.qtyOnOrderField;
            }
            set {
                this.qtyOnOrderField = value;
            }
        }
        
        /// <remarks/>
        public string DateAvailable {
            get {
                return this.dateAvailableField;
            }
            set {
                this.dateAvailableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class PriceTier {
        
        private string qtyField;
        
        private string priceField;
        
        private string customerTierField;
        
        /// <remarks/>
        public string Qty {
            get {
                return this.qtyField;
            }
            set {
                this.qtyField = value;
            }
        }
        
        /// <remarks/>
        public string Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerTier {
            get {
                return this.customerTierField;
            }
            set {
                this.customerTierField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CustomerSearchResult {
        
        private CustomerObject[] customersField;
        
        private string customersMatchedField;
        
        private string customersReturnedField;
        
        private string limitField;
        
        private string startIndexField;
        
        /// <remarks/>
        public CustomerObject[] Customers {
            get {
                return this.customersField;
            }
            set {
                this.customersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CustomersMatched {
            get {
                return this.customersMatchedField;
            }
            set {
                this.customersMatchedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CustomersReturned {
            get {
                return this.customersReturnedField;
            }
            set {
                this.customersReturnedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Limit {
            get {
                return this.limitField;
            }
            set {
                this.limitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string StartIndex {
            get {
                return this.startIndexField;
            }
            set {
                this.startIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CustomerObject {
        
        private double amountField;
        
        private Address billingAddressField;
        
        private System.DateTime createdField;
        
        private bool createdFieldSpecified;
        
        private string currencyField;
        
        private string custNumField;
        
        private string customDataField;
        
        private FieldValue[] customFieldsField;
        
        private string customerIDField;
        
        private string descriptionField;
        
        private bool enabledField;
        
        private int failuresField;
        
        private bool failuresFieldSpecified;
        
        private string lookupCodeField;
        
        private System.DateTime modifiedField;
        
        private bool modifiedFieldSpecified;
        
        private string nextField;
        
        private string notesField;
        
        private string numLeftField;
        
        private string orderIDField;
        
        private PaymentMethod[] paymentMethodsField;
        
        private string priceTierField;
        
        private string receiptNoteField;
        
        private string scheduleField;
        
        private bool sendReceiptField;
        
        private string sourceField;
        
        private double taxField;
        
        private bool taxFieldSpecified;
        
        private string taxClassField;
        
        private string userField;
        
        private string uRLField;
        
        /// <remarks/>
        public double Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public Address BillingAddress {
            get {
                return this.billingAddressField;
            }
            set {
                this.billingAddressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool CreatedSpecified {
            get {
                return this.createdFieldSpecified;
            }
            set {
                this.createdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public string CustNum {
            get {
                return this.custNumField;
            }
            set {
                this.custNumField = value;
            }
        }
        
        /// <remarks/>
        public string CustomData {
            get {
                return this.customDataField;
            }
            set {
                this.customDataField = value;
            }
        }
        
        /// <remarks/>
        public FieldValue[] CustomFields {
            get {
                return this.customFieldsField;
            }
            set {
                this.customFieldsField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public int Failures {
            get {
                return this.failuresField;
            }
            set {
                this.failuresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool FailuresSpecified {
            get {
                return this.failuresFieldSpecified;
            }
            set {
                this.failuresFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string LookupCode {
            get {
                return this.lookupCodeField;
            }
            set {
                this.lookupCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool ModifiedSpecified {
            get {
                return this.modifiedFieldSpecified;
            }
            set {
                this.modifiedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Next {
            get {
                return this.nextField;
            }
            set {
                this.nextField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string NumLeft {
            get {
                return this.numLeftField;
            }
            set {
                this.numLeftField = value;
            }
        }
        
        /// <remarks/>
        public string OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
        
        /// <remarks/>
        public PaymentMethod[] PaymentMethods {
            get {
                return this.paymentMethodsField;
            }
            set {
                this.paymentMethodsField = value;
            }
        }
        
        /// <remarks/>
        public string PriceTier {
            get {
                return this.priceTierField;
            }
            set {
                this.priceTierField = value;
            }
        }
        
        /// <remarks/>
        public string ReceiptNote {
            get {
                return this.receiptNoteField;
            }
            set {
                this.receiptNoteField = value;
            }
        }
        
        /// <remarks/>
        public string Schedule {
            get {
                return this.scheduleField;
            }
            set {
                this.scheduleField = value;
            }
        }
        
        /// <remarks/>
        public bool SendReceipt {
            get {
                return this.sendReceiptField;
            }
            set {
                this.sendReceiptField = value;
            }
        }
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public double Tax {
            get {
                return this.taxField;
            }
            set {
                this.taxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool TaxSpecified {
            get {
                return this.taxFieldSpecified;
            }
            set {
                this.taxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string TaxClass {
            get {
                return this.taxClassField;
            }
            set {
                this.taxClassField = value;
            }
        }
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class Address {
        
        private string cityField;
        
        private string companyField;
        
        private string countryField;
        
        private string emailField;
        
        private string faxField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string phoneField;
        
        private string stateField;
        
        private string streetField;
        
        private string street2Field;
        
        private string zipField;
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string Street2 {
            get {
                return this.street2Field;
            }
            set {
                this.street2Field = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class FieldValue {
        
        private string fieldField;
        
        private string valueField;
        
        /// <remarks/>
        public string Field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class PaymentMethod {
        
        private string methodTypeField;
        
        private string methodIDField;
        
        private string methodNameField;
        
        private string secondarySortField;
        
        private System.DateTime createdField;
        
        private bool createdFieldSpecified;
        
        private System.DateTime modifiedField;
        
        private bool modifiedFieldSpecified;
        
        private string accountField;
        
        private string accountTypeField;
        
        private string driversLicenseField;
        
        private string driversLicenseStateField;
        
        private string recordTypeField;
        
        private string routingField;
        
        private string avsStreetField;
        
        private string avsZipField;
        
        private string cardCodeField;
        
        private string cardExpirationField;
        
        private string cardNumberField;
        
        private string cardTypeField;
        
        private double balanceField;
        
        private bool balanceFieldSpecified;
        
        private double maxBalanceField;
        
        private bool maxBalanceFieldSpecified;
        
        private string autoReloadField;
        
        private string reloadScheduleField;
        
        private string reloadThresholdField;
        
        private string reloadAmountField;
        
        private string reloadMethodIDField;
        
        /// <remarks/>
        public string MethodType {
            get {
                return this.methodTypeField;
            }
            set {
                this.methodTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string MethodID {
            get {
                return this.methodIDField;
            }
            set {
                this.methodIDField = value;
            }
        }
        
        /// <remarks/>
        public string MethodName {
            get {
                return this.methodNameField;
            }
            set {
                this.methodNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string SecondarySort {
            get {
                return this.secondarySortField;
            }
            set {
                this.secondarySortField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool CreatedSpecified {
            get {
                return this.createdFieldSpecified;
            }
            set {
                this.createdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool ModifiedSpecified {
            get {
                return this.modifiedFieldSpecified;
            }
            set {
                this.modifiedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
        
        /// <remarks/>
        public string AccountType {
            get {
                return this.accountTypeField;
            }
            set {
                this.accountTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DriversLicense {
            get {
                return this.driversLicenseField;
            }
            set {
                this.driversLicenseField = value;
            }
        }
        
        /// <remarks/>
        public string DriversLicenseState {
            get {
                return this.driversLicenseStateField;
            }
            set {
                this.driversLicenseStateField = value;
            }
        }
        
        /// <remarks/>
        public string RecordType {
            get {
                return this.recordTypeField;
            }
            set {
                this.recordTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Routing {
            get {
                return this.routingField;
            }
            set {
                this.routingField = value;
            }
        }
        
        /// <remarks/>
        public string AvsStreet {
            get {
                return this.avsStreetField;
            }
            set {
                this.avsStreetField = value;
            }
        }
        
        /// <remarks/>
        public string AvsZip {
            get {
                return this.avsZipField;
            }
            set {
                this.avsZipField = value;
            }
        }
        
        /// <remarks/>
        public string CardCode {
            get {
                return this.cardCodeField;
            }
            set {
                this.cardCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CardExpiration {
            get {
                return this.cardExpirationField;
            }
            set {
                this.cardExpirationField = value;
            }
        }
        
        /// <remarks/>
        public string CardNumber {
            get {
                return this.cardNumberField;
            }
            set {
                this.cardNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
            }
        }
        
        /// <remarks/>
        public double Balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool BalanceSpecified {
            get {
                return this.balanceFieldSpecified;
            }
            set {
                this.balanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double MaxBalance {
            get {
                return this.maxBalanceField;
            }
            set {
                this.maxBalanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool MaxBalanceSpecified {
            get {
                return this.maxBalanceFieldSpecified;
            }
            set {
                this.maxBalanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string AutoReload {
            get {
                return this.autoReloadField;
            }
            set {
                this.autoReloadField = value;
            }
        }
        
        /// <remarks/>
        public string ReloadSchedule {
            get {
                return this.reloadScheduleField;
            }
            set {
                this.reloadScheduleField = value;
            }
        }
        
        /// <remarks/>
        public string ReloadThreshold {
            get {
                return this.reloadThresholdField;
            }
            set {
                this.reloadThresholdField = value;
            }
        }
        
        /// <remarks/>
        public string ReloadAmount {
            get {
                return this.reloadAmountField;
            }
            set {
                this.reloadAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string ReloadMethodID {
            get {
                return this.reloadMethodIDField;
            }
            set {
                this.reloadMethodIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class BatchSearchResult {
        
        private BatchStatus[] batchesField;
        
        private string batchesMatchedField;
        
        private string batchesReturnedField;
        
        private string limitField;
        
        private string startIndexField;
        
        /// <remarks/>
        public BatchStatus[] Batches {
            get {
                return this.batchesField;
            }
            set {
                this.batchesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string BatchesMatched {
            get {
                return this.batchesMatchedField;
            }
            set {
                this.batchesMatchedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string BatchesReturned {
            get {
                return this.batchesReturnedField;
            }
            set {
                this.batchesReturnedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Limit {
            get {
                return this.limitField;
            }
            set {
                this.limitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string StartIndex {
            get {
                return this.startIndexField;
            }
            set {
                this.startIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class BatchStatus {
        
        private string batchRefNumField;
        
        private string closedField;
        
        private double creditsAmountField;
        
        private string creditsCountField;
        
        private double netAmountField;
        
        private string openedField;
        
        private double salesAmountField;
        
        private string salesCountField;
        
        private string scheduledField;
        
        private string sequenceField;
        
        private string statusField;
        
        private string transactionCountField;
        
        private double voidsAmountField;
        
        private string voidsCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string BatchRefNum {
            get {
                return this.batchRefNumField;
            }
            set {
                this.batchRefNumField = value;
            }
        }
        
        /// <remarks/>
        public string Closed {
            get {
                return this.closedField;
            }
            set {
                this.closedField = value;
            }
        }
        
        /// <remarks/>
        public double CreditsAmount {
            get {
                return this.creditsAmountField;
            }
            set {
                this.creditsAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CreditsCount {
            get {
                return this.creditsCountField;
            }
            set {
                this.creditsCountField = value;
            }
        }
        
        /// <remarks/>
        public double NetAmount {
            get {
                return this.netAmountField;
            }
            set {
                this.netAmountField = value;
            }
        }
        
        /// <remarks/>
        public string Opened {
            get {
                return this.openedField;
            }
            set {
                this.openedField = value;
            }
        }
        
        /// <remarks/>
        public double SalesAmount {
            get {
                return this.salesAmountField;
            }
            set {
                this.salesAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string SalesCount {
            get {
                return this.salesCountField;
            }
            set {
                this.salesCountField = value;
            }
        }
        
        /// <remarks/>
        public string Scheduled {
            get {
                return this.scheduledField;
            }
            set {
                this.scheduledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string TransactionCount {
            get {
                return this.transactionCountField;
            }
            set {
                this.transactionCountField = value;
            }
        }
        
        /// <remarks/>
        public double VoidsAmount {
            get {
                return this.voidsAmountField;
            }
            set {
                this.voidsAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string VoidsCount {
            get {
                return this.voidsCountField;
            }
            set {
                this.voidsCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class SearchParam {
        
        private string fieldField;
        
        private string typeField;
        
        private string valueField;
        
        /// <remarks/>
        public string Field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CustomerTransactionRequest {
        
        private string commandField;
        
        private string cardCodeField;
        
        private string clientIPField;
        
        private FieldValue[] customFieldsField;
        
        private bool custReceiptField;
        
        private bool custReceiptFieldSpecified;
        
        private string custReceiptEmailField;
        
        private string custReceiptNameField;
        
        private bool merchReceiptField;
        
        private bool merchReceiptFieldSpecified;
        
        private string merchReceiptEmailField;
        
        private string merchReceiptNameField;
        
        private TransactionDetail detailsField;
        
        private bool ignoreDuplicateField;
        
        private bool ignoreDuplicateFieldSpecified;
        
        private string inventoryLocationField;
        
        private bool isRecurringField;
        
        private bool isRecurringFieldSpecified;
        
        private LineItem[] lineItemsField;
        
        private string softwareField;
        
        /// <remarks/>
        public string Command {
            get {
                return this.commandField;
            }
            set {
                this.commandField = value;
            }
        }
        
        /// <remarks/>
        public string CardCode {
            get {
                return this.cardCodeField;
            }
            set {
                this.cardCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ClientIP {
            get {
                return this.clientIPField;
            }
            set {
                this.clientIPField = value;
            }
        }
        
        /// <remarks/>
        public FieldValue[] CustomFields {
            get {
                return this.customFieldsField;
            }
            set {
                this.customFieldsField = value;
            }
        }
        
        /// <remarks/>
        public bool CustReceipt {
            get {
                return this.custReceiptField;
            }
            set {
                this.custReceiptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool CustReceiptSpecified {
            get {
                return this.custReceiptFieldSpecified;
            }
            set {
                this.custReceiptFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string CustReceiptEmail {
            get {
                return this.custReceiptEmailField;
            }
            set {
                this.custReceiptEmailField = value;
            }
        }
        
        /// <remarks/>
        public string CustReceiptName {
            get {
                return this.custReceiptNameField;
            }
            set {
                this.custReceiptNameField = value;
            }
        }
        
        /// <remarks/>
        public bool MerchReceipt {
            get {
                return this.merchReceiptField;
            }
            set {
                this.merchReceiptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool MerchReceiptSpecified {
            get {
                return this.merchReceiptFieldSpecified;
            }
            set {
                this.merchReceiptFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string MerchReceiptEmail {
            get {
                return this.merchReceiptEmailField;
            }
            set {
                this.merchReceiptEmailField = value;
            }
        }
        
        /// <remarks/>
        public string MerchReceiptName {
            get {
                return this.merchReceiptNameField;
            }
            set {
                this.merchReceiptNameField = value;
            }
        }
        
        /// <remarks/>
        public TransactionDetail Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        public bool IgnoreDuplicate {
            get {
                return this.ignoreDuplicateField;
            }
            set {
                this.ignoreDuplicateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool IgnoreDuplicateSpecified {
            get {
                return this.ignoreDuplicateFieldSpecified;
            }
            set {
                this.ignoreDuplicateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string InventoryLocation {
            get {
                return this.inventoryLocationField;
            }
            set {
                this.inventoryLocationField = value;
            }
        }
        
        /// <remarks/>
        public bool isRecurring {
            get {
                return this.isRecurringField;
            }
            set {
                this.isRecurringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool isRecurringSpecified {
            get {
                return this.isRecurringFieldSpecified;
            }
            set {
                this.isRecurringFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public LineItem[] LineItems {
            get {
                return this.lineItemsField;
            }
            set {
                this.lineItemsField = value;
            }
        }
        
        /// <remarks/>
        public string Software {
            get {
                return this.softwareField;
            }
            set {
                this.softwareField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class TransactionDetail {
        
        private bool allowPartialAuthField;
        
        private bool allowPartialAuthFieldSpecified;
        
        private double amountField;
        
        private bool amountFieldSpecified;
        
        private string clerkField;
        
        private string currencyField;
        
        private string descriptionField;
        
        private string commentsField;
        
        private double discountField;
        
        private bool discountFieldSpecified;
        
        private double dutyField;
        
        private bool dutyFieldSpecified;
        
        private string invoiceField;
        
        private bool nonTaxField;
        
        private bool nonTaxFieldSpecified;
        
        private string orderIDField;
        
        private string pONumField;
        
        private string sessionIDField;
        
        private string shipFromZipField;
        
        private double shippingField;
        
        private bool shippingFieldSpecified;
        
        private double subtotalField;
        
        private bool subtotalFieldSpecified;
        
        private string tableField;
        
        private double taxField;
        
        private bool taxFieldSpecified;
        
        private string terminalField;
        
        private double tipField;
        
        private bool tipFieldSpecified;
        
        /// <remarks/>
        public bool AllowPartialAuth {
            get {
                return this.allowPartialAuthField;
            }
            set {
                this.allowPartialAuthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool AllowPartialAuthSpecified {
            get {
                return this.allowPartialAuthFieldSpecified;
            }
            set {
                this.allowPartialAuthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool AmountSpecified {
            get {
                return this.amountFieldSpecified;
            }
            set {
                this.amountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Clerk {
            get {
                return this.clerkField;
            }
            set {
                this.clerkField = value;
            }
        }
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public double Discount {
            get {
                return this.discountField;
            }
            set {
                this.discountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool DiscountSpecified {
            get {
                return this.discountFieldSpecified;
            }
            set {
                this.discountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Duty {
            get {
                return this.dutyField;
            }
            set {
                this.dutyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool DutySpecified {
            get {
                return this.dutyFieldSpecified;
            }
            set {
                this.dutyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Invoice {
            get {
                return this.invoiceField;
            }
            set {
                this.invoiceField = value;
            }
        }
        
        /// <remarks/>
        public bool NonTax {
            get {
                return this.nonTaxField;
            }
            set {
                this.nonTaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool NonTaxSpecified {
            get {
                return this.nonTaxFieldSpecified;
            }
            set {
                this.nonTaxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
        
        /// <remarks/>
        public string PONum {
            get {
                return this.pONumField;
            }
            set {
                this.pONumField = value;
            }
        }
        
        /// <remarks/>
        public string SessionID {
            get {
                return this.sessionIDField;
            }
            set {
                this.sessionIDField = value;
            }
        }
        
        /// <remarks/>
        public string ShipFromZip {
            get {
                return this.shipFromZipField;
            }
            set {
                this.shipFromZipField = value;
            }
        }
        
        /// <remarks/>
        public double Shipping {
            get {
                return this.shippingField;
            }
            set {
                this.shippingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool ShippingSpecified {
            get {
                return this.shippingFieldSpecified;
            }
            set {
                this.shippingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Subtotal {
            get {
                return this.subtotalField;
            }
            set {
                this.subtotalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool SubtotalSpecified {
            get {
                return this.subtotalFieldSpecified;
            }
            set {
                this.subtotalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Table {
            get {
                return this.tableField;
            }
            set {
                this.tableField = value;
            }
        }
        
        /// <remarks/>
        public double Tax {
            get {
                return this.taxField;
            }
            set {
                this.taxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool TaxSpecified {
            get {
                return this.taxFieldSpecified;
            }
            set {
                this.taxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Terminal {
            get {
                return this.terminalField;
            }
            set {
                this.terminalField = value;
            }
        }
        
        /// <remarks/>
        public double Tip {
            get {
                return this.tipField;
            }
            set {
                this.tipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool TipSpecified {
            get {
                return this.tipFieldSpecified;
            }
            set {
                this.tipFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class LineItem {
        
        private string productRefNumField;
        
        private string sKUField;
        
        private string commodityCodeField;
        
        private string productNameField;
        
        private string descriptionField;
        
        private string discountAmountField;
        
        private string discountRateField;
        
        private string unitOfMeasureField;
        
        private string unitPriceField;
        
        private string qtyField;
        
        private bool taxableField;
        
        private bool taxableFieldSpecified;
        
        private string taxAmountField;
        
        private string taxRateField;
        
        /// <remarks/>
        public string ProductRefNum {
            get {
                return this.productRefNumField;
            }
            set {
                this.productRefNumField = value;
            }
        }
        
        /// <remarks/>
        public string SKU {
            get {
                return this.sKUField;
            }
            set {
                this.sKUField = value;
            }
        }
        
        /// <remarks/>
        public string CommodityCode {
            get {
                return this.commodityCodeField;
            }
            set {
                this.commodityCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DiscountAmount {
            get {
                return this.discountAmountField;
            }
            set {
                this.discountAmountField = value;
            }
        }
        
        /// <remarks/>
        public string DiscountRate {
            get {
                return this.discountRateField;
            }
            set {
                this.discountRateField = value;
            }
        }
        
        /// <remarks/>
        public string UnitOfMeasure {
            get {
                return this.unitOfMeasureField;
            }
            set {
                this.unitOfMeasureField = value;
            }
        }
        
        /// <remarks/>
        public string UnitPrice {
            get {
                return this.unitPriceField;
            }
            set {
                this.unitPriceField = value;
            }
        }
        
        /// <remarks/>
        public string Qty {
            get {
                return this.qtyField;
            }
            set {
                this.qtyField = value;
            }
        }
        
        /// <remarks/>
        public bool Taxable {
            get {
                return this.taxableField;
            }
            set {
                this.taxableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool TaxableSpecified {
            get {
                return this.taxableFieldSpecified;
            }
            set {
                this.taxableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string TaxAmount {
            get {
                return this.taxAmountField;
            }
            set {
                this.taxAmountField = value;
            }
        }
        
        /// <remarks/>
        public string TaxRate {
            get {
                return this.taxRateField;
            }
            set {
                this.taxRateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class RecurringBilling {
        
        private double amountField;
        
        private bool enabledField;
        
        private string expireField;
        
        private string nextField;
        
        private string numLeftField;
        
        private string scheduleField;
        
        /// <remarks/>
        public double Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public string Expire {
            get {
                return this.expireField;
            }
            set {
                this.expireField = value;
            }
        }
        
        /// <remarks/>
        public string Next {
            get {
                return this.nextField;
            }
            set {
                this.nextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string NumLeft {
            get {
                return this.numLeftField;
            }
            set {
                this.numLeftField = value;
            }
        }
        
        /// <remarks/>
        public string Schedule {
            get {
                return this.scheduleField;
            }
            set {
                this.scheduleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class TransactionRequestObject {
        
        private string accountHolderField;
        
        private string authCodeField;
        
        private Address billingAddressField;
        
        private CheckData checkDataField;
        
        private string clientIPField;
        
        private string commandField;
        
        private CreditCardData creditCardDataField;
        
        private string customerIDField;
        
        private FieldValue[] customFieldsField;
        
        private bool custReceiptField;
        
        private bool custReceiptFieldSpecified;
        
        private string custReceiptNameField;
        
        private TransactionDetail detailsField;
        
        private string ifAuthExpiredField;
        
        private bool ignoreDuplicateField;
        
        private bool ignoreDuplicateFieldSpecified;
        
        private string inventoryLocationField;
        
        private bool isRecurringField;
        
        private bool isRecurringFieldSpecified;
        
        private LineItem[] lineItemsField;
        
        private RecurringBilling recurringBillingField;
        
        private string refNumField;
        
        private Address shippingAddressField;
        
        private string softwareField;
        
        /// <remarks/>
        public string AccountHolder {
            get {
                return this.accountHolderField;
            }
            set {
                this.accountHolderField = value;
            }
        }
        
        /// <remarks/>
        public string AuthCode {
            get {
                return this.authCodeField;
            }
            set {
                this.authCodeField = value;
            }
        }
        
        /// <remarks/>
        public Address BillingAddress {
            get {
                return this.billingAddressField;
            }
            set {
                this.billingAddressField = value;
            }
        }
        
        /// <remarks/>
        public CheckData CheckData {
            get {
                return this.checkDataField;
            }
            set {
                this.checkDataField = value;
            }
        }
        
        /// <remarks/>
        public string ClientIP {
            get {
                return this.clientIPField;
            }
            set {
                this.clientIPField = value;
            }
        }
        
        /// <remarks/>
        public string Command {
            get {
                return this.commandField;
            }
            set {
                this.commandField = value;
            }
        }
        
        /// <remarks/>
        public CreditCardData CreditCardData {
            get {
                return this.creditCardDataField;
            }
            set {
                this.creditCardDataField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public FieldValue[] CustomFields {
            get {
                return this.customFieldsField;
            }
            set {
                this.customFieldsField = value;
            }
        }
        
        /// <remarks/>
        public bool CustReceipt {
            get {
                return this.custReceiptField;
            }
            set {
                this.custReceiptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool CustReceiptSpecified {
            get {
                return this.custReceiptFieldSpecified;
            }
            set {
                this.custReceiptFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string CustReceiptName {
            get {
                return this.custReceiptNameField;
            }
            set {
                this.custReceiptNameField = value;
            }
        }
        
        /// <remarks/>
        public TransactionDetail Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        public string IfAuthExpired {
            get {
                return this.ifAuthExpiredField;
            }
            set {
                this.ifAuthExpiredField = value;
            }
        }
        
        /// <remarks/>
        public bool IgnoreDuplicate {
            get {
                return this.ignoreDuplicateField;
            }
            set {
                this.ignoreDuplicateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool IgnoreDuplicateSpecified {
            get {
                return this.ignoreDuplicateFieldSpecified;
            }
            set {
                this.ignoreDuplicateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string InventoryLocation {
            get {
                return this.inventoryLocationField;
            }
            set {
                this.inventoryLocationField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRecurring {
            get {
                return this.isRecurringField;
            }
            set {
                this.isRecurringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool IsRecurringSpecified {
            get {
                return this.isRecurringFieldSpecified;
            }
            set {
                this.isRecurringFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public LineItem[] LineItems {
            get {
                return this.lineItemsField;
            }
            set {
                this.lineItemsField = value;
            }
        }
        
        /// <remarks/>
        public RecurringBilling RecurringBilling {
            get {
                return this.recurringBillingField;
            }
            set {
                this.recurringBillingField = value;
            }
        }
        
        /// <remarks/>
        public string RefNum {
            get {
                return this.refNumField;
            }
            set {
                this.refNumField = value;
            }
        }
        
        /// <remarks/>
        public Address ShippingAddress {
            get {
                return this.shippingAddressField;
            }
            set {
                this.shippingAddressField = value;
            }
        }
        
        /// <remarks/>
        public string Software {
            get {
                return this.softwareField;
            }
            set {
                this.softwareField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CheckData {
        
        private string accountField;
        
        private string accountTypeField;
        
        private string checkNumberField;
        
        private string driversLicenseField;
        
        private string driversLicenseStateField;
        
        private string recordTypeField;
        
        private string routingField;
        
        private string mICRField;
        
        private string auxOnUSField;
        
        private string epcCodeField;
        
        private string frontImageField;
        
        private string backImageField;
        
        /// <remarks/>
        public string Account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
        
        /// <remarks/>
        public string AccountType {
            get {
                return this.accountTypeField;
            }
            set {
                this.accountTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CheckNumber {
            get {
                return this.checkNumberField;
            }
            set {
                this.checkNumberField = value;
            }
        }
        
        /// <remarks/>
        public string DriversLicense {
            get {
                return this.driversLicenseField;
            }
            set {
                this.driversLicenseField = value;
            }
        }
        
        /// <remarks/>
        public string DriversLicenseState {
            get {
                return this.driversLicenseStateField;
            }
            set {
                this.driversLicenseStateField = value;
            }
        }
        
        /// <remarks/>
        public string RecordType {
            get {
                return this.recordTypeField;
            }
            set {
                this.recordTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Routing {
            get {
                return this.routingField;
            }
            set {
                this.routingField = value;
            }
        }
        
        /// <remarks/>
        public string MICR {
            get {
                return this.mICRField;
            }
            set {
                this.mICRField = value;
            }
        }
        
        /// <remarks/>
        public string AuxOnUS {
            get {
                return this.auxOnUSField;
            }
            set {
                this.auxOnUSField = value;
            }
        }
        
        /// <remarks/>
        public string EpcCode {
            get {
                return this.epcCodeField;
            }
            set {
                this.epcCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FrontImage {
            get {
                return this.frontImageField;
            }
            set {
                this.frontImageField = value;
            }
        }
        
        /// <remarks/>
        public string BackImage {
            get {
                return this.backImageField;
            }
            set {
                this.backImageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CreditCardData {
        
        private string avsStreetField;
        
        private string avsZipField;
        
        private string cardCodeField;
        
        private string cardExpirationField;
        
        private string cardNumberField;
        
        private bool cardPresentField;
        
        private bool cardPresentFieldSpecified;
        
        private string cardTypeField;
        
        private string cAVVField;
        
        private string dUKPTField;
        
        private string eCIField;
        
        private bool internalCardAuthField;
        
        private bool internalCardAuthFieldSpecified;
        
        private string magStripeField;
        
        private string magSupportField;
        
        private string paresField;
        
        private string signatureField;
        
        private string termTypeField;
        
        private string xIDField;
        
        /// <remarks/>
        public string AvsStreet {
            get {
                return this.avsStreetField;
            }
            set {
                this.avsStreetField = value;
            }
        }
        
        /// <remarks/>
        public string AvsZip {
            get {
                return this.avsZipField;
            }
            set {
                this.avsZipField = value;
            }
        }
        
        /// <remarks/>
        public string CardCode {
            get {
                return this.cardCodeField;
            }
            set {
                this.cardCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CardExpiration {
            get {
                return this.cardExpirationField;
            }
            set {
                this.cardExpirationField = value;
            }
        }
        
        /// <remarks/>
        public string CardNumber {
            get {
                return this.cardNumberField;
            }
            set {
                this.cardNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool CardPresent {
            get {
                return this.cardPresentField;
            }
            set {
                this.cardPresentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool CardPresentSpecified {
            get {
                return this.cardPresentFieldSpecified;
            }
            set {
                this.cardPresentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string CardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CAVV {
            get {
                return this.cAVVField;
            }
            set {
                this.cAVVField = value;
            }
        }
        
        /// <remarks/>
        public string DUKPT {
            get {
                return this.dUKPTField;
            }
            set {
                this.dUKPTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string ECI {
            get {
                return this.eCIField;
            }
            set {
                this.eCIField = value;
            }
        }
        
        /// <remarks/>
        public bool InternalCardAuth {
            get {
                return this.internalCardAuthField;
            }
            set {
                this.internalCardAuthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool InternalCardAuthSpecified {
            get {
                return this.internalCardAuthFieldSpecified;
            }
            set {
                this.internalCardAuthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string MagStripe {
            get {
                return this.magStripeField;
            }
            set {
                this.magStripeField = value;
            }
        }
        
        /// <remarks/>
        public string MagSupport {
            get {
                return this.magSupportField;
            }
            set {
                this.magSupportField = value;
            }
        }
        
        /// <remarks/>
        public string Pares {
            get {
                return this.paresField;
            }
            set {
                this.paresField = value;
            }
        }
        
        /// <remarks/>
        public string Signature {
            get {
                return this.signatureField;
            }
            set {
                this.signatureField = value;
            }
        }
        
        /// <remarks/>
        public string TermType {
            get {
                return this.termTypeField;
            }
            set {
                this.termTypeField = value;
            }
        }
        
        /// <remarks/>
        public string XID {
            get {
                return this.xIDField;
            }
            set {
                this.xIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CreditCardToken {
        
        private string cardRefField;
        
        private string cardExpirationField;
        
        private string cardNumberField;
        
        private string cardTypeField;
        
        /// <remarks/>
        public string CardRef {
            get {
                return this.cardRefField;
            }
            set {
                this.cardRefField = value;
            }
        }
        
        /// <remarks/>
        public string CardExpiration {
            get {
                return this.cardExpirationField;
            }
            set {
                this.cardExpirationField = value;
            }
        }
        
        /// <remarks/>
        public string CardNumber {
            get {
                return this.cardNumberField;
            }
            set {
                this.cardNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class TransactionProfile {
        
        private string deviceIDField;
        
        private string policyField;
        
        private FieldValue[] profileDataField;
        
        private string riskRatingField;
        
        private string scoreField;
        
        private string sessionIDField;
        
        private string statusField;
        
        private FieldValue[] scoringField;
        
        /// <remarks/>
        public string DeviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
            }
        }
        
        /// <remarks/>
        public string Policy {
            get {
                return this.policyField;
            }
            set {
                this.policyField = value;
            }
        }
        
        /// <remarks/>
        public FieldValue[] ProfileData {
            get {
                return this.profileDataField;
            }
            set {
                this.profileDataField = value;
            }
        }
        
        /// <remarks/>
        public string RiskRating {
            get {
                return this.riskRatingField;
            }
            set {
                this.riskRatingField = value;
            }
        }
        
        /// <remarks/>
        public string Score {
            get {
                return this.scoreField;
            }
            set {
                this.scoreField = value;
            }
        }
        
        /// <remarks/>
        public string SessionID {
            get {
                return this.sessionIDField;
            }
            set {
                this.sessionIDField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public FieldValue[] Scoring {
            get {
                return this.scoringField;
            }
            set {
                this.scoringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class SystemInfo {
        
        private string apiVersionField;
        
        private string environmentField;
        
        private string datacenterField;
        
        private string timeField;
        
        /// <remarks/>
        public string ApiVersion {
            get {
                return this.apiVersionField;
            }
            set {
                this.apiVersionField = value;
            }
        }
        
        /// <remarks/>
        public string Environment {
            get {
                return this.environmentField;
            }
            set {
                this.environmentField = value;
            }
        }
        
        /// <remarks/>
        public string Datacenter {
            get {
                return this.datacenterField;
            }
            set {
                this.datacenterField = value;
            }
        }
        
        /// <remarks/>
        public string Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class SyncLog {
        
        private string syncPositionField;
        
        private string objectNameField;
        
        private string refNumField;
        
        private System.DateTime changeDateField;
        
        private string actionField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string SyncPosition {
            get {
                return this.syncPositionField;
            }
            set {
                this.syncPositionField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectName {
            get {
                return this.objectNameField;
            }
            set {
                this.objectNameField = value;
            }
        }
        
        /// <remarks/>
        public string RefNum {
            get {
                return this.refNumField;
            }
            set {
                this.refNumField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ChangeDate {
            get {
                return this.changeDateField;
            }
            set {
                this.changeDateField = value;
            }
        }
        
        /// <remarks/>
        public string Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class TransactionSession {
        
        private string orgIDField;
        
        private string sessionIDField;
        
        /// <remarks/>
        public string OrgID {
            get {
                return this.orgIDField;
            }
            set {
                this.orgIDField = value;
            }
        }
        
        /// <remarks/>
        public string SessionID {
            get {
                return this.sessionIDField;
            }
            set {
                this.sessionIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class TransactionSearchResult {
        
        private float authOnlyAmountField;
        
        private string authOnlyCountField;
        
        private float creditsAmountField;
        
        private string creditsCountField;
        
        private float declinesAmountField;
        
        private string declinesCountField;
        
        private float errorsAmountField;
        
        private string errorsCountField;
        
        private string limitField;
        
        private float salesAmountField;
        
        private string salesCountField;
        
        private string startIndexField;
        
        private TransactionObject[] transactionsField;
        
        private string transactionsMatchedField;
        
        private string transactionsReturnedField;
        
        private float voidsAmountField;
        
        private string voidsCountField;
        
        /// <remarks/>
        public float AuthOnlyAmount {
            get {
                return this.authOnlyAmountField;
            }
            set {
                this.authOnlyAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string AuthOnlyCount {
            get {
                return this.authOnlyCountField;
            }
            set {
                this.authOnlyCountField = value;
            }
        }
        
        /// <remarks/>
        public float CreditsAmount {
            get {
                return this.creditsAmountField;
            }
            set {
                this.creditsAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CreditsCount {
            get {
                return this.creditsCountField;
            }
            set {
                this.creditsCountField = value;
            }
        }
        
        /// <remarks/>
        public float DeclinesAmount {
            get {
                return this.declinesAmountField;
            }
            set {
                this.declinesAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string DeclinesCount {
            get {
                return this.declinesCountField;
            }
            set {
                this.declinesCountField = value;
            }
        }
        
        /// <remarks/>
        public float ErrorsAmount {
            get {
                return this.errorsAmountField;
            }
            set {
                this.errorsAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string ErrorsCount {
            get {
                return this.errorsCountField;
            }
            set {
                this.errorsCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Limit {
            get {
                return this.limitField;
            }
            set {
                this.limitField = value;
            }
        }
        
        /// <remarks/>
        public float SalesAmount {
            get {
                return this.salesAmountField;
            }
            set {
                this.salesAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string SalesCount {
            get {
                return this.salesCountField;
            }
            set {
                this.salesCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string StartIndex {
            get {
                return this.startIndexField;
            }
            set {
                this.startIndexField = value;
            }
        }
        
        /// <remarks/>
        public TransactionObject[] Transactions {
            get {
                return this.transactionsField;
            }
            set {
                this.transactionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string TransactionsMatched {
            get {
                return this.transactionsMatchedField;
            }
            set {
                this.transactionsMatchedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string TransactionsReturned {
            get {
                return this.transactionsReturnedField;
            }
            set {
                this.transactionsReturnedField = value;
            }
        }
        
        /// <remarks/>
        public float VoidsAmount {
            get {
                return this.voidsAmountField;
            }
            set {
                this.voidsAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string VoidsCount {
            get {
                return this.voidsCountField;
            }
            set {
                this.voidsCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class TransactionObject {
        
        private string accountHolderField;
        
        private Address billingAddressField;
        
        private CheckData checkDataField;
        
        private CheckTrace checkTraceField;
        
        private string clientIPField;
        
        private CreditCardData creditCardDataField;
        
        private string customerIDField;
        
        private FieldValue[] customFieldsField;
        
        private string dateTimeField;
        
        private TransactionDetail detailsField;
        
        private LineItem[] lineItemsField;
        
        private TransactionResponse responseField;
        
        private string serverIPField;
        
        private Address shippingAddressField;
        
        private string sourceField;
        
        private string statusField;
        
        private string transactionTypeField;
        
        private string userField;
        
        /// <remarks/>
        public string AccountHolder {
            get {
                return this.accountHolderField;
            }
            set {
                this.accountHolderField = value;
            }
        }
        
        /// <remarks/>
        public Address BillingAddress {
            get {
                return this.billingAddressField;
            }
            set {
                this.billingAddressField = value;
            }
        }
        
        /// <remarks/>
        public CheckData CheckData {
            get {
                return this.checkDataField;
            }
            set {
                this.checkDataField = value;
            }
        }
        
        /// <remarks/>
        public CheckTrace CheckTrace {
            get {
                return this.checkTraceField;
            }
            set {
                this.checkTraceField = value;
            }
        }
        
        /// <remarks/>
        public string ClientIP {
            get {
                return this.clientIPField;
            }
            set {
                this.clientIPField = value;
            }
        }
        
        /// <remarks/>
        public CreditCardData CreditCardData {
            get {
                return this.creditCardDataField;
            }
            set {
                this.creditCardDataField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public FieldValue[] CustomFields {
            get {
                return this.customFieldsField;
            }
            set {
                this.customFieldsField = value;
            }
        }
        
        /// <remarks/>
        public string DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        public TransactionDetail Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        public LineItem[] LineItems {
            get {
                return this.lineItemsField;
            }
            set {
                this.lineItemsField = value;
            }
        }
        
        /// <remarks/>
        public TransactionResponse Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
        
        /// <remarks/>
        public string ServerIP {
            get {
                return this.serverIPField;
            }
            set {
                this.serverIPField = value;
            }
        }
        
        /// <remarks/>
        public Address ShippingAddress {
            get {
                return this.shippingAddressField;
            }
            set {
                this.shippingAddressField = value;
            }
        }
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string TransactionType {
            get {
                return this.transactionTypeField;
            }
            set {
                this.transactionTypeField = value;
            }
        }
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CheckTrace {
        
        private string statusField;
        
        private string statusCodeField;
        
        private string bankNoteField;
        
        private string effectiveField;
        
        private string processedField;
        
        private string returnedField;
        
        private string returnCodeField;
        
        private string reasonField;
        
        private string settledField;
        
        private string trackingNumField;
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string BankNote {
            get {
                return this.bankNoteField;
            }
            set {
                this.bankNoteField = value;
            }
        }
        
        /// <remarks/>
        public string Effective {
            get {
                return this.effectiveField;
            }
            set {
                this.effectiveField = value;
            }
        }
        
        /// <remarks/>
        public string Processed {
            get {
                return this.processedField;
            }
            set {
                this.processedField = value;
            }
        }
        
        /// <remarks/>
        public string Returned {
            get {
                return this.returnedField;
            }
            set {
                this.returnedField = value;
            }
        }
        
        /// <remarks/>
        public string ReturnCode {
            get {
                return this.returnCodeField;
            }
            set {
                this.returnCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public string Settled {
            get {
                return this.settledField;
            }
            set {
                this.settledField = value;
            }
        }
        
        /// <remarks/>
        public string TrackingNum {
            get {
                return this.trackingNumField;
            }
            set {
                this.trackingNumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class TransactionResponse {
        
        private string acsUrlField;
        
        private double authAmountField;
        
        private string authCodeField;
        
        private string avsResultField;
        
        private string avsResultCodeField;
        
        private string batchNumField;
        
        private string batchRefNumField;
        
        private string cardCodeResultField;
        
        private string cardCodeResultCodeField;
        
        private string cardLevelResultField;
        
        private string cardLevelResultCodeField;
        
        private double conversionRateField;
        
        private double convertedAmountField;
        
        private string convertedAmountCurrencyField;
        
        private string custNumField;
        
        private string errorField;
        
        private string errorCodeField;
        
        private bool isDuplicateField;
        
        private string payloadField;
        
        private string profilerScoreField;
        
        private string profilerResponseField;
        
        private string profilerReasonField;
        
        private string refNumField;
        
        private double remainingBalanceField;
        
        private bool remainingBalanceFieldSpecified;
        
        private string resultField;
        
        private string resultCodeField;
        
        private string statusField;
        
        private string statusCodeField;
        
        private string vpasResultCodeField;
        
        /// <remarks/>
        public string AcsUrl {
            get {
                return this.acsUrlField;
            }
            set {
                this.acsUrlField = value;
            }
        }
        
        /// <remarks/>
        public double AuthAmount {
            get {
                return this.authAmountField;
            }
            set {
                this.authAmountField = value;
            }
        }
        
        /// <remarks/>
        public string AuthCode {
            get {
                return this.authCodeField;
            }
            set {
                this.authCodeField = value;
            }
        }
        
        /// <remarks/>
        public string AvsResult {
            get {
                return this.avsResultField;
            }
            set {
                this.avsResultField = value;
            }
        }
        
        /// <remarks/>
        public string AvsResultCode {
            get {
                return this.avsResultCodeField;
            }
            set {
                this.avsResultCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string BatchNum {
            get {
                return this.batchNumField;
            }
            set {
                this.batchNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string BatchRefNum {
            get {
                return this.batchRefNumField;
            }
            set {
                this.batchRefNumField = value;
            }
        }
        
        /// <remarks/>
        public string CardCodeResult {
            get {
                return this.cardCodeResultField;
            }
            set {
                this.cardCodeResultField = value;
            }
        }
        
        /// <remarks/>
        public string CardCodeResultCode {
            get {
                return this.cardCodeResultCodeField;
            }
            set {
                this.cardCodeResultCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CardLevelResult {
            get {
                return this.cardLevelResultField;
            }
            set {
                this.cardLevelResultField = value;
            }
        }
        
        /// <remarks/>
        public string CardLevelResultCode {
            get {
                return this.cardLevelResultCodeField;
            }
            set {
                this.cardLevelResultCodeField = value;
            }
        }
        
        /// <remarks/>
        public double ConversionRate {
            get {
                return this.conversionRateField;
            }
            set {
                this.conversionRateField = value;
            }
        }
        
        /// <remarks/>
        public double ConvertedAmount {
            get {
                return this.convertedAmountField;
            }
            set {
                this.convertedAmountField = value;
            }
        }
        
        /// <remarks/>
        public string ConvertedAmountCurrency {
            get {
                return this.convertedAmountCurrencyField;
            }
            set {
                this.convertedAmountCurrencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string CustNum {
            get {
                return this.custNumField;
            }
            set {
                this.custNumField = value;
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool isDuplicate {
            get {
                return this.isDuplicateField;
            }
            set {
                this.isDuplicateField = value;
            }
        }
        
        /// <remarks/>
        public string Payload {
            get {
                return this.payloadField;
            }
            set {
                this.payloadField = value;
            }
        }
        
        /// <remarks/>
        public string ProfilerScore {
            get {
                return this.profilerScoreField;
            }
            set {
                this.profilerScoreField = value;
            }
        }
        
        /// <remarks/>
        public string ProfilerResponse {
            get {
                return this.profilerResponseField;
            }
            set {
                this.profilerResponseField = value;
            }
        }
        
        /// <remarks/>
        public string ProfilerReason {
            get {
                return this.profilerReasonField;
            }
            set {
                this.profilerReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string RefNum {
            get {
                return this.refNumField;
            }
            set {
                this.refNumField = value;
            }
        }
        
        /// <remarks/>
        public double RemainingBalance {
            get {
                return this.remainingBalanceField;
            }
            set {
                this.remainingBalanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool RemainingBalanceSpecified {
            get {
                return this.remainingBalanceFieldSpecified;
            }
            set {
                this.remainingBalanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string VpasResultCode {
            get {
                return this.vpasResultCodeField;
            }
            set {
                this.vpasResultCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class Bank {
        
        private string codeField;
        
        private string nameField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CurrencyObject {
        
        private string currencyField;
        
        private string decimalPlacesField;
        
        private string numericCodeField;
        
        private double rateField;
        
        private string textCodeField;
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string DecimalPlaces {
            get {
                return this.decimalPlacesField;
            }
            set {
                this.decimalPlacesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string NumericCode {
            get {
                return this.numericCodeField;
            }
            set {
                this.numericCodeField = value;
            }
        }
        
        /// <remarks/>
        public double Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
        
        /// <remarks/>
        public string TextCode {
            get {
                return this.textCodeField;
            }
            set {
                this.textCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class AccountDetails {
        
        private string cardholderAuthenticationField;
        
        private string checkPlatformField;
        
        private string creditCardPlatformField;
        
        private bool debitCardSupportField;
        
        private string directPayPlatformField;
        
        private string industryField;
        
        private CurrencyObject[] supportedCurrenciesField;
        
        /// <remarks/>
        public string CardholderAuthentication {
            get {
                return this.cardholderAuthenticationField;
            }
            set {
                this.cardholderAuthenticationField = value;
            }
        }
        
        /// <remarks/>
        public string CheckPlatform {
            get {
                return this.checkPlatformField;
            }
            set {
                this.checkPlatformField = value;
            }
        }
        
        /// <remarks/>
        public string CreditCardPlatform {
            get {
                return this.creditCardPlatformField;
            }
            set {
                this.creditCardPlatformField = value;
            }
        }
        
        /// <remarks/>
        public bool DebitCardSupport {
            get {
                return this.debitCardSupportField;
            }
            set {
                this.debitCardSupportField = value;
            }
        }
        
        /// <remarks/>
        public string DirectPayPlatform {
            get {
                return this.directPayPlatformField;
            }
            set {
                this.directPayPlatformField = value;
            }
        }
        
        /// <remarks/>
        public string Industry {
            get {
                return this.industryField;
            }
            set {
                this.industryField = value;
            }
        }
        
        /// <remarks/>
        public CurrencyObject[] SupportedCurrencies {
            get {
                return this.supportedCurrenciesField;
            }
            set {
                this.supportedCurrenciesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class BatchUploadStatus {
        
        private string approvedField;
        
        private string uploadRefNumField;
        
        private string declinedField;
        
        private string errorsField;
        
        private string finishedField;
        
        private string remainingField;
        
        private string startedField;
        
        private string statusField;
        
        private string transactionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Approved {
            get {
                return this.approvedField;
            }
            set {
                this.approvedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string UploadRefNum {
            get {
                return this.uploadRefNumField;
            }
            set {
                this.uploadRefNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Declined {
            get {
                return this.declinedField;
            }
            set {
                this.declinedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public string Finished {
            get {
                return this.finishedField;
            }
            set {
                this.finishedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Remaining {
            get {
                return this.remainingField;
            }
            set {
                this.remainingField = value;
            }
        }
        
        /// <remarks/>
        public string Started {
            get {
                return this.startedField;
            }
            set {
                this.startedField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string Transactions {
            get {
                return this.transactionsField;
            }
            set {
                this.transactionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class CurrencyConversion {
        
        private double amountField;
        
        private string currencyField;
        
        private double fromAmountField;
        
        private string fromCurrencyField;
        
        private double rateField;
        
        /// <remarks/>
        public double Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public double FromAmount {
            get {
                return this.fromAmountField;
            }
            set {
                this.fromAmountField = value;
            }
        }
        
        /// <remarks/>
        public string FromCurrency {
            get {
                return this.fromCurrencyField;
            }
            set {
                this.fromCurrencyField = value;
            }
        }
        
        /// <remarks/>
        public double Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class Receipt {
        
        private string receiptRefNumField;
        
        private string nameField;
        
        private string subjectField;
        
        private string fromEmailField;
        
        private string targetField;
        
        private string contentTypeField;
        
        private string templateHTMLField;
        
        private string templateTextField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="integer")]
        public string ReceiptRefNum {
            get {
                return this.receiptRefNumField;
            }
            set {
                this.receiptRefNumField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string FromEmail {
            get {
                return this.fromEmailField;
            }
            set {
                this.fromEmailField = value;
            }
        }
        
        /// <remarks/>
        public string Target {
            get {
                return this.targetField;
            }
            set {
                this.targetField = value;
            }
        }
        
        /// <remarks/>
        public string ContentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateHTML {
            get {
                return this.templateHTMLField;
            }
            set {
                this.templateHTMLField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateText {
            get {
                return this.templateTextField;
            }
            set {
                this.templateTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class ProductInventoryLocation {
        
        private string inventoryLocationField;
        
        private string locationNameField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string InventoryLocation {
            get {
                return this.inventoryLocationField;
            }
            set {
                this.inventoryLocationField = value;
            }
        }
        
        /// <remarks/>
        public string LocationName {
            get {
                return this.locationNameField;
            }
            set {
                this.locationNameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:usaepay")]
    public partial class ProductCategory {
        
        private string productCategoryRefNumField;
        
        private string nameField;
        
        private System.DateTime createdField;
        
        private bool createdFieldSpecified;
        
        private System.DateTime modifiedField;
        
        private bool modifiedFieldSpecified;
        
        /// <remarks/>
        public string ProductCategoryRefNum {
            get {
                return this.productCategoryRefNumField;
            }
            set {
                this.productCategoryRefNumField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool CreatedSpecified {
            get {
                return this.createdFieldSpecified;
            }
            set {
                this.createdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool ModifiedSpecified {
            get {
                return this.modifiedFieldSpecified;
            }
            set {
                this.modifiedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addCustomerCompletedEventHandler(object sender, addCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addCustomerPaymentMethodCompletedEventHandler(object sender, addCustomerPaymentMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCustomerPaymentMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCustomerPaymentMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addProductCompletedEventHandler(object sender, addProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addProductCategoryCompletedEventHandler(object sender, addProductCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addProductCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addProductCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addProductInventoryLocationCompletedEventHandler(object sender, addProductInventoryLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addProductInventoryLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addProductInventoryLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addReceiptCompletedEventHandler(object sender, addReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void adjustInventoryCompletedEventHandler(object sender, adjustInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class adjustInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal adjustInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductInventory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductInventory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void bulkCurrencyConversionCompletedEventHandler(object sender, bulkCurrencyConversionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bulkCurrencyConversionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bulkCurrencyConversionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CurrencyConversion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyConversion[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void captureTransactionCompletedEventHandler(object sender, captureTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class captureTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal captureTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void closeBatchCompletedEventHandler(object sender, closeBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class closeBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal closeBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void convertTranToCustCompletedEventHandler(object sender, convertTranToCustCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class convertTranToCustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal convertTranToCustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void convertTranToPayMethodCompletedEventHandler(object sender, convertTranToPayMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class convertTranToPayMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal convertTranToPayMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void copyCustomerCompletedEventHandler(object sender, copyCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class copyCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal copyCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void createBatchUploadCompletedEventHandler(object sender, createBatchUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createBatchUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createBatchUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BatchUploadStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchUploadStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void currencyConversionCompletedEventHandler(object sender, currencyConversionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class currencyConversionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal currencyConversionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CurrencyConversion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyConversion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deleteCustomerCompletedEventHandler(object sender, deleteCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deleteCustomerPaymentMethodCompletedEventHandler(object sender, deleteCustomerPaymentMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCustomerPaymentMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCustomerPaymentMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deleteProductCompletedEventHandler(object sender, deleteProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deleteProductCategoryCompletedEventHandler(object sender, deleteProductCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteProductCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteProductCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void deleteReceiptCompletedEventHandler(object sender, deleteReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void disableCustomerCompletedEventHandler(object sender, disableCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class disableCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal disableCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void emailTransactionReceiptCompletedEventHandler(object sender, emailTransactionReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class emailTransactionReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal emailTransactionReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void emailTransactionReceiptByNameCompletedEventHandler(object sender, emailTransactionReceiptByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class emailTransactionReceiptByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal emailTransactionReceiptByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void enableCustomerCompletedEventHandler(object sender, enableCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enableCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enableCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getAccountDetailsCompletedEventHandler(object sender, getAccountDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getBankListCompletedEventHandler(object sender, getBankListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBankListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBankListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Bank[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bank[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getBatchStatusCompletedEventHandler(object sender, getBatchStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBatchStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBatchStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BatchStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getBatchTransactionsCompletedEventHandler(object sender, getBatchTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBatchTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBatchTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getBatchUploadStatusCompletedEventHandler(object sender, getBatchUploadStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBatchUploadStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBatchUploadStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BatchUploadStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchUploadStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getCheckTraceCompletedEventHandler(object sender, getCheckTraceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCheckTraceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCheckTraceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CheckTrace Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CheckTrace)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getCustomerCompletedEventHandler(object sender, getCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getCustomerHistoryCompletedEventHandler(object sender, getCustomerHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionSearchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getCustomerPaymentMethodCompletedEventHandler(object sender, getCustomerPaymentMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerPaymentMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerPaymentMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PaymentMethod Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PaymentMethod)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getCustomerPaymentMethodsCompletedEventHandler(object sender, getCustomerPaymentMethodsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerPaymentMethodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerPaymentMethodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PaymentMethod[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PaymentMethod[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getCustomerReportCompletedEventHandler(object sender, getCustomerReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getCustomFieldsCompletedEventHandler(object sender, getCustomFieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FieldValue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FieldValue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getProductCompletedEventHandler(object sender, getProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getProductCategoryCompletedEventHandler(object sender, getProductCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProductCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProductCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCategory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCategory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getProductCategoriesCompletedEventHandler(object sender, getProductCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProductCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProductCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCategory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getProductInventoryCompletedEventHandler(object sender, getProductInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProductInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProductInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductInventory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductInventory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getProductInventoryLocationCompletedEventHandler(object sender, getProductInventoryLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProductInventoryLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProductInventoryLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductInventoryLocation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductInventoryLocation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getProductInventoryLocationsCompletedEventHandler(object sender, getProductInventoryLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProductInventoryLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProductInventoryLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductInventoryLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductInventoryLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getReceiptCompletedEventHandler(object sender, getReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Receipt Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Receipt)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getReceiptByNameCompletedEventHandler(object sender, getReceiptByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReceiptByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReceiptByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Receipt Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Receipt)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getReceiptsCompletedEventHandler(object sender, getReceiptsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReceiptsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReceiptsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Receipt[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Receipt[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getReportCompletedEventHandler(object sender, getReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getSessionCompletedEventHandler(object sender, getSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionSession Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionSession)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getSupportedCurrenciesCompletedEventHandler(object sender, getSupportedCurrenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSupportedCurrenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSupportedCurrenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CurrencyObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getSyncLogCompletedEventHandler(object sender, getSyncLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSyncLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSyncLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SyncLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SyncLog[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getSyncLogCurrentPositionCompletedEventHandler(object sender, getSyncLogCurrentPositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSyncLogCurrentPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSyncLogCurrentPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getSystemInfoCompletedEventHandler(object sender, getSystemInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSystemInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSystemInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SystemInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SystemInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getTransactionCompletedEventHandler(object sender, getTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getTransactionCustomCompletedEventHandler(object sender, getTransactionCustomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FieldValue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FieldValue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getTransactionProfileCompletedEventHandler(object sender, getTransactionProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionProfile Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionProfile)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getTransactionReportCompletedEventHandler(object sender, getTransactionReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getTransactionStatusCompletedEventHandler(object sender, getTransactionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void moveCustomerCompletedEventHandler(object sender, moveCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void lookupCardTokenCompletedEventHandler(object sender, lookupCardTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lookupCardTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lookupCardTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreditCardToken Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreditCardToken)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void pauseBatchUploadCompletedEventHandler(object sender, pauseBatchUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class pauseBatchUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal pauseBatchUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void postAuthCompletedEventHandler(object sender, postAuthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class postAuthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal postAuthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void quickUpdateCustomerCompletedEventHandler(object sender, quickUpdateCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class quickUpdateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal quickUpdateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void quickUpdateProductCompletedEventHandler(object sender, quickUpdateProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class quickUpdateProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal quickUpdateProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void refundTransactionCompletedEventHandler(object sender, refundTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class refundTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal refundTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void renderReceiptCompletedEventHandler(object sender, renderReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class renderReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal renderReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void renderReceiptByNameCompletedEventHandler(object sender, renderReceiptByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class renderReceiptByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal renderReceiptByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void runBatchUploadCompletedEventHandler(object sender, runBatchUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runBatchUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runBatchUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void runCreditCompletedEventHandler(object sender, runCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void runCheckCreditCompletedEventHandler(object sender, runCheckCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runCheckCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runCheckCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void runCustomerTransactionCompletedEventHandler(object sender, runCustomerTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runCustomerTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runCustomerTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void runQuickSaleCompletedEventHandler(object sender, runQuickSaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runQuickSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runQuickSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void runQuickCreditCompletedEventHandler(object sender, runQuickCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runQuickCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runQuickCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void runAuthOnlyCompletedEventHandler(object sender, runAuthOnlyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runAuthOnlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runAuthOnlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void runSaleCompletedEventHandler(object sender, runSaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void runCheckSaleCompletedEventHandler(object sender, runCheckSaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runCheckSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runCheckSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void runTransactionCompletedEventHandler(object sender, runTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void runTransactionAPICompletedEventHandler(object sender, runTransactionAPICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class runTransactionAPICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal runTransactionAPICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void saveCardCompletedEventHandler(object sender, saveCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreditCardToken Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreditCardToken)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void saveCardsCompletedEventHandler(object sender, saveCardsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveCardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveCardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreditCardToken[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreditCardToken[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void searchBatchesCompletedEventHandler(object sender, searchBatchesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchBatchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchBatchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BatchSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchSearchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void searchBatchesCountCompletedEventHandler(object sender, searchBatchesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchBatchesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchBatchesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BatchSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchSearchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void searchCustomerIDCompletedEventHandler(object sender, searchCustomerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCustomerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchCustomerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void searchCustomersCompletedEventHandler(object sender, searchCustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerSearchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void searchCustomersCountCompletedEventHandler(object sender, searchCustomersCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCustomersCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchCustomersCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerSearchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void searchProductsCompletedEventHandler(object sender, searchProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductSearchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void searchProductsCountCompletedEventHandler(object sender, searchProductsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchProductsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchProductsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductSearchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void searchProductsCustomCompletedEventHandler(object sender, searchProductsCustomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchProductsCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchProductsCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void searchTransactionsCompletedEventHandler(object sender, searchTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionSearchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void searchTransactionsCountCompletedEventHandler(object sender, searchTransactionsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchTransactionsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchTransactionsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionSearchResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionSearchResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void searchTransactionsCustomCompletedEventHandler(object sender, searchTransactionsCustomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchTransactionsCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchTransactionsCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void searchCustomersCustomCompletedEventHandler(object sender, searchCustomersCustomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCustomersCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchCustomersCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void setDefaultPaymentMethodCompletedEventHandler(object sender, setDefaultPaymentMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setDefaultPaymentMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setDefaultPaymentMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void updateCustomerCompletedEventHandler(object sender, updateCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void updateCustomerPaymentMethodCompletedEventHandler(object sender, updateCustomerPaymentMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCustomerPaymentMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCustomerPaymentMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void updateProductCompletedEventHandler(object sender, updateProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void updateProductCategoryCompletedEventHandler(object sender, updateProductCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateProductCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateProductCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void updateReceiptCompletedEventHandler(object sender, updateReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void uploadProductFileCompletedEventHandler(object sender, uploadProductFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadProductFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadProductFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void voidTransactionCompletedEventHandler(object sender, voidTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class voidTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal voidTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void overrideTransactionCompletedEventHandler(object sender, overrideTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class overrideTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal overrideTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591